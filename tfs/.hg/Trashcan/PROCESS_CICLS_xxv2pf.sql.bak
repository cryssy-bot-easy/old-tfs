--<ScriptOptions statementTerminator="@">
CREATE OR REPLACE PROCEDURE TFSDB2S.PROCESS_CICLS(IN P_DATE TIMESTAMP)
SPECIFIC PROCESS_CICLS
LANGUAGE SQL
--######################################################################################################
--# Description:    Processes CICLS records that will be used on CICLS Handoff File.
--# Created by:     Cedrick C. Nungay 
--# Date created:   02/08/2024
--######################################################################################################
--# Input:  P_DATE  :   Process date
--######################################################################################################
P1: BEGIN
    -- CLEAN UP BEFORE PROCESSING
    DELETE FROM TFSDB2S.LNCLST_CICLS;

    INSERT INTO TFSDB2S.LNCLST_CICLS
        (SYSCOD, CIFNO, ACCTNO, NAME, CIFID, CIFCOD, ORGLMT, TOSBAL, PRODUCT, PRODSC, DATE, TIME, LORGAM
        , TLOSBAL, CURTYP, ALFLG, ADBBAL, STADSC, AFCPNO, ORGSBL, LOCSBL, PRODUCT_ID, CREATED_DATE
        , ORGLMT_IRR, TOSBAL_IRR)
    WITH LATEST_TS AS (SELECT TRADEPRODUCTNUMBER, MAX(CREATEDDATE) CREATEDDATE
        FROM TRADESERVICE
        WHERE DOCUMENTCLASS IN ('DA','OA','LC', 'INDEMNITY') AND SERVICETYPE NOT IN ('UA_LOAN_SETTLEMENT', 'ADJUSTMENT')
        GROUP BY TRADEPRODUCTNUMBER),
        IRR_RATES AS (SELECT JFXDCD, JFXDCR FROM TFSDB2S.JHFXDT WHERE JFXDBC = 'PHP' AND JFXDRN = 3),
        REV_INFO AS (
            SELECT LOC.DOCUMENTNUMBER,LOC.REV_ID,REV.REV, MAX(REV.REVTSTMP) AS REVTSTMP
            FROM LETTEROFCREDIT_AUDIT LOC JOIN REVINFO REV ON LOC.REV_ID = REV.REV
            GROUP BY LOC.DOCUMENTNUMBER,LOC.REV_ID,REV.REV
        ),
        T AS (SELECT T.REVTSTMP, T.DOCUMENTNUMBER, R.REV AS REV_ID
            FROM REVINFO R JOIN REV_INFO T ON R.REVTSTMP = T.REVTSTMP
        ),
        MAX_DATE AS (SELECT T.DOCUMENTNUMBER, MAX(LOC.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE
        FROM LETTEROFCREDIT_AUDIT LOC
        JOIN T ON LOC.DOCUMENTNUMBER = T.DOCUMENTNUMBER AND LOC.REV_ID = T.REV_ID
        WHERE DATE(LOC.LASTMODIFIEDDATE) <= NOW() GROUP BY T.DOCUMENTNUMBER
        ),
        FINAL_CASH AS (SELECT LOC.DOCUMENTNUMBER, LOC.LASTMODIFIEDDATE
                , CASE WHEN loc.TYPE = 'REGULAR' and loc.TENOR = 'SIGHT' and LOC.CASHFLAG = 1
                    THEN  CASE WHEN LOC.CASHAMOUNT - LOC.TOTALNEGOTIATEDCASHAMOUNT <= 0
                               THEN 0
                               ELSE (LOC.CASHAMOUNT - LOC.TOTALNEGOTIATEDCASHAMOUNT) END
                    ELSE LOC.OUTSTANDINGBALANCE END AS OUTSTANDINGBALANCE
            FROM LETTEROFCREDIT_AUDIT LOC
            JOIN MAX_DATE MDATE ON LOC.DOCUMENTNUMBER = MDATE.DOCUMENTNUMBER
            WHERE MDATE.LASTMODIFIEDDATE = LOC.LASTMODIFIEDDATE
                AND LOC.TENOR = 'SIGHT'
                AND (LOC.TYPE = 'CASH' OR LOC.CASHFLAG = 1)
        )        
    SELECT SYSCOD, CIFNO, ACCTNO, NAME, CIFID, CIFCOD, ORGLMT, TOSBAL, PRODUCT, PRODSC
        , DATE, TIME, LORGAM, TLOSBAL, CURTYP, ALFLG, ADBBAL, STADSC, AFCPNO, ORGSBL
        , LOCSBL, PROD_ID, CREATED_DATE, ORGLMT_IRR, TOSBAL_IRR
        FROM (
    -- FACILITY AVAILMENT / LNCLST
        SELECT A.SYSCOD, A.CIFNO, A.ACCTNO, A.NAME, A.CIFID, A.CIFCOD, A.ORGLMT, A.TOSBAL, A.PRODUCT, A.PRODSC
            , A.DATE, A.TIME, A.LORGAM, A.TLOSBAL, A.CURTYP, A.ALFLG, A.ADBBAL, A.STADSC, A.AFCPNO, A.ORGSBL
            , A.LOCSBL, D.PROD_ID, NOW() AS "CREATED_DATE"
            , DECODE(A.CURTYP, 'PHP', A.ORGLMT, A.ORGLMT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURTYP)) AS "ORGLMT_IRR"
            , DECODE(A.CURTYP, 'PHP', A.TOSBAL, A.TOSBAL * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURTYP)) AS "TOSBAL_IRR"
            , C.STATUS
        FROM TFSDB2S.LNCLST A
        INNER JOIN LATEST_TS B
        ON A.ACCTNO = REPLACE(B.TRADEPRODUCTNUMBER, '-', '')
        INNER JOIN TRADESERVICE C
        ON B.TRADEPRODUCTNUMBER = C.TRADEPRODUCTNUMBER
            AND B.CREATEDDATE = C.CREATEDDATE
        LEFT JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING D
        ON C.DOCUMENTCLASS = D.MOP_PRODUCT
            AND C.SERVICETYPE = D.SERVICE_TYPE
            AND C.STATUS NOT IN ( 'EXPIRED', 'RETURNED', 'PENDING' )
        -- CASH LC
        UNION ALL
        SELECT 'TF', C.CIFNUMBER, REPLACE(A.DOCUMENTNUMBER, '-', ''), G.CFSNME, NULL, NULL, C.AMOUNT, A.OUTSTANDINGBALANCE, '25', NULL
            , NULL, NULL, DECODE(C.CURRENCY , 'PHP', C.AMOUNT
                , C.AMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = C.CURRENCY))
            , DECODE(C.CURRENCY , 'PHP', A.OUTSTANDINGBALANCE
                , A.OUTSTANDINGBALANCE * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = C.CURRENCY))
            , C.CURRENCY, 'A', 0, 'CURRENT', '', 0, 0, F.PROD_ID, NOW() AS "CREATED_DATE"
            , DECODE(C.CURRENCY , 'PHP', C.AMOUNT
                , C.AMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = C.CURRENCY))
            , DECODE(C.CURRENCY , 'PHP', A.OUTSTANDINGBALANCE
                , A.OUTSTANDINGBALANCE * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = C.CURRENCY))
            , E.STATUS
        FROM FINAL_CASH A
        LEFT JOIN LETTEROFCREDIT_AUDIT B
            ON A.DOCUMENTNUMBER = B.DOCUMENTNUMBER
                AND A.LASTMODIFIEDDATE = B.LASTMODIFIEDDATE
        LEFT JOIN TRADEPRODUCT_AUDIT C
            ON B.DOCUMENTNUMBER = C.DOCUMENTNUMBER
                AND B.REV_ID = C.REV_ID
        INNER JOIN LATEST_TS D
            ON B.DOCUMENTNUMBER = D.TRADEPRODUCTNUMBER
        INNER JOIN TRADESERVICE E
            ON D.TRADEPRODUCTNUMBER = E.TRADEPRODUCTNUMBER
                AND D.CREATEDDATE = E.CREATEDDATE
        LEFT JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING F
            ON E.DOCUMENTCLASS = F.MOP_PRODUCT
            AND E.SERVICETYPE = F.SERVICE_TYPE
        INNER JOIN TFSDB2S.CFMAST G
            ON C.CIFNUMBER = G.CFCIF#
        WHERE C.STATUS <> 'EXPIRED'
            AND C.STATUS <> 'CANCELLED'
            AND C.STATUS <> 'CLOSED'
            AND A.OUTSTANDINGBALANCE > 0
            AND E.STATUS NOT IN ( 'EXPIRED', 'RETURNED', 'PENDING' )
        -- OA, DA
        UNION ALL
        SELECT 'TF', A.CIFNUMBER, REPLACE(A.DOCUMENTNUMBER, '-', ''), G.CFSNME, NULL, NULL, DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT)
            , DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT), '25', NULL, NULL, NULL
            , DECODE(A.CURRENCY , 'PHP', DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT)
                , DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT) * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURRENCY))
            , DECODE(A.CURRENCY , 'PHP', DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT)
                , DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT) * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURRENCY))
            , A.CURRENCY, 'A', 0, 'CURRENT', '', 0, 0, F.PROD_ID, NOW() AS "CREATED_DATE"
            , DECODE(A.CURRENCY , 'PHP', DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT)
                , DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT) * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURRENCY))
            , DECODE(A.CURRENCY , 'PHP', DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT)
                , DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT) * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURRENCY))
            , E.STATUS
        FROM TRADEPRODUCT AS A
        LEFT JOIN DOCUMENTAGAINSTACCEPTANCE AS B
            ON A.DOCUMENTNUMBER = B.DOCUMENTNUMBER
        LEFT JOIN OPENACCOUNT AS C
            ON A.DOCUMENTNUMBER = C.DOCUMENTNUMBER
        INNER JOIN LATEST_TS D
            ON A.DOCUMENTNUMBER = D.TRADEPRODUCTNUMBER
        INNER JOIN TRADESERVICE E
            ON D.TRADEPRODUCTNUMBER = E.TRADEPRODUCTNUMBER
                AND D.CREATEDDATE = E.CREATEDDATE
        LEFT JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING F
            ON E.DOCUMENTCLASS = F.MOP_PRODUCT
            AND E.SERVICETYPE = F.SERVICE_TYPE
        INNER JOIN TFSDB2S.CFMAST G
            ON A.CIFNUMBER = G.CFCIF#
        WHERE A.PRODUCTTYPE IN ('DA', 'OA', 'LC')
        AND (B.DOCUMENTTYPE = 'FOREIGN' OR C.DOCUMENTTYPE = 'FOREIGN')
        AND (A.STATUS = 'NEGOTIATED' OR A.STATUS ='ACCEPTED')
        AND E.STATUS NOT IN ( 'EXPIRED', 'RETURNED', 'PENDING' )
        -- BG
        UNION ALL
        SELECT 'TF', B.CIFNUMBER, REPLACE(A.INDEMNITYNUMBER, '-', ''), F.CFSNME, NULL, NULL, A.SHIPMENTAMOUNT
            , A.SHIPMENTAMOUNT, '25', NULL, NULL, NULL
            , DECODE(B.CURRENCY , 'PHP', A.SHIPMENTAMOUNT
                , A.SHIPMENTAMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = B.CURRENCY))
            , DECODE(B.CURRENCY , 'PHP', A.SHIPMENTAMOUNT
                , A.SHIPMENTAMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = B.CURRENCY))
            , B.CURRENCY, 'A', 0, 'CURRENT', '', 0, 0, E.PROD_ID, NOW() AS "CREATED_DATE"
            , DECODE(B.CURRENCY , 'PHP', A.SHIPMENTAMOUNT
                , A.SHIPMENTAMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = B.CURRENCY))
            , DECODE(B.CURRENCY , 'PHP', A.SHIPMENTAMOUNT
                , A.SHIPMENTAMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = B.CURRENCY))
            , D.STATUS
        FROM INDEMNITY A
        INNER JOIN TRADEPRODUCT AS B
            ON A.INDEMNITYNUMBER = B.DOCUMENTNUMBER
        INNER JOIN LATEST_TS C
            ON A.INDEMNITYNUMBER = C.TRADEPRODUCTNUMBER
        INNER JOIN TRADESERVICE D
            ON C.TRADEPRODUCTNUMBER = D.TRADEPRODUCTNUMBER
                AND C.CREATEDDATE = D.CREATEDDATE
        LEFT JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING E
            ON D.DOCUMENTCLASS = E.MOP_PRODUCT
            AND D.SERVICETYPE = E.SERVICE_TYPE
        INNER JOIN TFSDB2S.CFMAST F
            ON B.CIFNUMBER = F.CFCIF#
        WHERE 
            -- DAYS_BETWEEN(NOW(), A.INDEMNITYISSUEDATE) > 60
            AND A.SHIPMENTAMOUNT > 0
            AND A.INDEMNITYTYPE = 'BG'
            AND B.STATUS = 'OPEN'
            AND E.STATUS NOT IN ( 'EXPIRED', 'RETURNED', 'PENDING' )
        );

    DELETE FROM TFSDB2S.LNTFINT_CICLS;
    INSERT INTO TFSDB2S.LNTFINT_CICLS(AANO, FCODE, FSEQ, TRSEQ, ACCTNO
        , ACTYPE, "BR#", "RBR#", "TYPE", CURTYP, SNAME, CIFNO
        , TERM, TMCODE, ORGAMT, ORGDT6, RATE, PMTAMT
        , CFPDT, DRLIMT, MATDT6, OFFCR, FREQ, FRCODE
        , IPFREQ, IPCODE, GLBOOK, "GROUP", TNUMBR, TIMPOR
        , TAMTOR, TEXP6, TRSTS, TRUNLINK, TRUSERID, CRDTCD, PMTCOD
        , REQSTS, SYSCOD, RS4FLG, PRODUCT_ID, OUTSTANDING_PAST_DUE, LOAN_STATUS
        , CREATED_DATE, LORGAMT, LPMTAMT)
    -- -- SELECT AANO, FCODE, FSEQ, A.TRSEQ, A.ACCTNO
    -- --     , ACTYPE, "BR#", "RBR#", "TYPE", CURTYP, SNAME, CIFNO
    -- --     , TERM, TMCODE, LORGAMT, ORGDT6, RATE, LPMTAMT
    -- --     , CFPDT, DRLIMT, MATDT6, OFFCR, FREQ, FRCODE
    -- --     , IPFREQ, IPCODE, GLBOOK, "GROUP", TRIM(TNUMBR), TIMPOR
    -- --     , TAMTOR, TEXP6, TRSTS, TRUNLINK, TRUSERID, CRDTCD, PMTCOD
    -- --     , REQSTS, SYSCOD, RS4FLG, PRODUCT_ID, OUTSTANDING_PAST_DUE, LOAN_STATUS
    -- --     , NOW(), LORGAMT, LPMTAMT
    -- -- FROM TFSDB2S.LNTFINT A
    -- -- -- REMOVAL OF REVERSED(UNLINKED) PAYMENTS
    -- -- INNER JOIN (SELECT ACCTNO, MAX(TRSEQ) TRSEQ
    -- --     FROM TFSDB2S.LNTFINT
    -- --     GROUP BY ACCTNO) B
    -- -- ON A.ACCTNO = B.ACCTNO
    -- --     AND A.TRSEQ = B.TRSEQ
    -- --     AND 1 = MOD((SELECT COUNT(*) FROM TFSDB2S.LNTFINT WHERE ACCTNO = A.ACCTNO), 2)
    -- --     AND A.LOAN_STATUS <> 'PAID'
    -- -- WHERE A.TRSTS = 'Y';
    SELECT AANO, FCODE, FSEQ, A.TRSEQ, A.ACCTNO
        , ACTYPE, "BR#", "RBR#", "TYPE", CURTYP, SNAME, CIFNO
        , TERM, TMCODE, LORGAMT, ORGDT6, RATE, LPMTAMT
        , CFPDT, DRLIMT, MATDT6, OFFCR, FREQ, FRCODE
        , IPFREQ, IPCODE, GLBOOK, "GROUP", TRIM(TNUMBR), TIMPOR
        , TAMTOR, TEXP6, TRSTS, TRUNLINK, TRUSERID, CRDTCD, PMTCOD
        , REQSTS, SYSCOD, RS4FLG, F.PROD_ID, OUTSTANDING_PAST_DUE, LOAN_STATUS
        , NOW(), LORGAMT, LPMTAMT
 	FROM TFSDB2S.LNTFINT A
 	INNER JOIN (SELECT ACCTNO, MAX(TRSEQ) TRSEQ
        FROM TFSDB2S.LNTFINT
        WHERE TRUNLINK = 'N'
        GROUP BY ACCTNO) B
    ON A.ACCTNO = B.ACCTNO
	INNER JOIN TFSDB2P.PAYMENTDETAIL C
	 	ON A.ACCTNO = C.PNNUMBER
	INNER JOIN TFSDB2P.PAYMENT D
	 	ON C.PAYMENTID = D.ID
	INNER JOIN TFSDB2P.TRADESERVICE E
	 	ON D.TRADESERVICEID = E.TRADESERVICEID
	INNER JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING F
		ON E.DOCUMENTCLASS = F.MOP_PRODUCT
		AND E.SERVICETYPE = F.SERVICE_TYPE
    WHERE
	   A.LOAN_STATUS NOT IN ('CANCEL', 'PAID')
	   AND A.TRSTS = 'Y'
	   AND E.STATUS <>'APPROVED';
END P1@
