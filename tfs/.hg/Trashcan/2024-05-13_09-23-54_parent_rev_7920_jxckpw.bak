diff --git a/Database_Programs/Loans and Facility Interface/GET_BALANCE.sql b/Database_Programs/Loans and Facility Interface/GET_BALANCE.sql
--- a/Database_Programs/Loans and Facility Interface/GET_BALANCE.sql	
+++ b/Database_Programs/Loans and Facility Interface/GET_BALANCE.sql	
@@ -21,9 +21,8 @@
     DECLARE V_UNPAID_LOANS DECIMAL(15, 2);
     DECLARE V_TYPE_OF_CREDIT CHAR(1);
 
-    -- RETRIEVE FACILITY BALANCE LIMIT ON LNAPPF
-    SET (V_FACILITY_LIMIT, V_AFCPNO, V_TYPE_OF_CREDIT) =
+        SET (V_FACILITY_LIMIT, V_AFCPNO, V_TYPE_OF_CREDIT) =
         (SELECT A.AFFAMT, A.AFCPNO, B.LKREVL
         FROM TFSDB2S.LNAPPF A, TFSDB2S.LNPARK B WHERE A.AFFCDE = B.LKFCOD AND A.AFCIF# = P_CIFNUMBER
             AND A.AFFCDE = P_FACILITY_CODE AND A.AFSEQ = P_FACILITY_ID);
 
@@ -26,9 +25,8 @@
         (SELECT A.AFFAMT, A.AFCPNO, B.LKREVL
         FROM TFSDB2S.LNAPPF A, TFSDB2S.LNPARK B WHERE A.AFFCDE = B.LKFCOD AND A.AFCIF# = P_CIFNUMBER
             AND A.AFFCDE = P_FACILITY_CODE AND A.AFSEQ = P_FACILITY_ID);
 
-    -- IF REVOLVING
-    IF V_TYPE_OF_CREDIT = 'R' THEN
-        SET V_OUTSTANDING_AVAILMENT = COALESCE((SELECT SUM(TOSBAL_IRR) FROM TFSDB2S.LNCLST WHERE AFCPNO = V_AFCPNO), 0);
+        IF V_TYPE_OF_CREDIT = 'R' THEN
+        SET V_OUTSTANDING_AVAILMENT = COALESCE((SELECT SUM(TOSBAL_IRR) FROM TFSDB2S.LNCLST WHERE AFCPNO = V_AFCPNO AND CIFNO = P_CIFNUMBER), 0);
 
         SET V_UNPAID_LOANS = (
@@ -33,9 +31,4 @@
 
         SET V_UNPAID_LOANS = (
---            WITH LATEST_PER_LOAN AS (SELECT ACCTNO, MAX(TRSEQ) TRSEQ
---                    FROM TFSDB2S.LNTFINT
---                    GROUP BY ACCTNO),
---                COUNT_PER_LOAN AS (SELECT ACCTNO, COUNT(*) CNT FROM TFSDB2S.LNTFINT GROUP BY ACCTNO),
---                ACTIVE_LOAN AS (SELECT A.* FROM LATEST_PER_LOAN A, COUNT_PER_LOAN B WHERE A.ACCTNO = B.ACCTNO AND 1 = MOD(CNT, 2))
             SELECT SUM(A.LORGAMT) - SUM(A.LPMTAMT)
             FROM TFSDB2S.LNTFINT A
@@ -40,7 +33,6 @@
             SELECT SUM(A.LORGAMT) - SUM(A.LPMTAMT)
             FROM TFSDB2S.LNTFINT A
-            -- RETRIEVAL OF ACTIVE LOAN THAT HAS NO REVERSAL
-            INNER JOIN (
+                        INNER JOIN (
                  SELECT X.* FROM (SELECT ACCTNO, MAX(TRSEQ) TRSEQ 
                  FROM TFSDB2S.LNTFINT GROUP BY ACCTNO) X
                      , (SELECT ACCTNO, COUNT(*) CNT FROM TFSDB2S.LNTFINT GROUP BY ACCTNO) Y
@@ -48,8 +40,8 @@
             ) B
             ON A.ACCTNO = B.ACCTNO
                 AND A.TRSEQ = B.TRSEQ
-            WHERE A.TNUMBR IN (SELECT DISTINCT ACCTNO FROM TFSDB2S.LNCLST WHERE AFCPNO = V_AFCPNO)
+            WHERE A.ACCTNO IN (SELECT DISTINCT ACCTNO FROM TFSDB2S.LNTFINT WHERE CIFNO = P_CIFNUMBER)
                 AND A.LOAN_STATUS = 'UNPAID');
         
         SET V_OUTSTANDING_BAL = V_FACILITY_LIMIT - (V_OUTSTANDING_AVAILMENT + COALESCE(V_UNPAID_LOANS, 0));
     ELSE
@@ -52,7 +44,6 @@
                 AND A.LOAN_STATUS = 'UNPAID');
         
         SET V_OUTSTANDING_BAL = V_FACILITY_LIMIT - (V_OUTSTANDING_AVAILMENT + COALESCE(V_UNPAID_LOANS, 0));
     ELSE
-    -- IF NON REVOLVING
-        SET V_OUTSTANDING_BAL = V_FACILITY_LIMIT - COALESCE((SELECT SUM(ORGLMT_IRR) FROM TFSDB2S.LNCLST WHERE AFCPNO = V_AFCPNO), 0);
+            SET V_OUTSTANDING_BAL = V_FACILITY_LIMIT - COALESCE((SELECT SUM(ORGLMT_IRR) FROM TFSDB2S.LNCLST WHERE AFCPNO = V_AFCPNO), 0);
     END IF;
@@ -58,3 +49,4 @@
     END IF;
+    
     RETURN V_OUTSTANDING_BAL;
 END P1@
diff --git a/Database_Programs/Loans and Facility Interface/GET_CICLS.sql b/Database_Programs/Loans and Facility Interface/GET_CICLS.sql
--- a/Database_Programs/Loans and Facility Interface/GET_CICLS.sql	
+++ b/Database_Programs/Loans and Facility Interface/GET_CICLS.sql	
@@ -12,5 +12,4 @@
 --######################################################################################################
 P1: BEGIN
     DECLARE C_CICLS CURSOR WITH RETURN FOR
-        WITH IRR_RATES AS (SELECT JFXDCD, JFXDCR FROM TFSDB2S.JHFXDT WHERE JFXDBC = 'PHP' AND JFXDRN = 3)
         SELECT A.CIFNO AS "CLIENT_NUMBER",
@@ -16,9 +15,23 @@
         SELECT A.CIFNO AS "CLIENT_NUMBER",
-            CASE WHEN B.CFINDI = 'Y'
-                THEN COALESCE(TRIM(B.CFNA1A), '') || ' ' || COALESCE(TRIM(B.CFNA1B),'') || ' ' || COALESCE(TRIM(B.CFNA1), '')
-                WHEN B.CFINDI = 'N' THEN B.CL_NAME ELSE ''
-            END AS "CLIENT_NAME",
+            CASE WHEN CFINDI = 'Y' 
+                            THEN COALESCE(TRIM(B.CFNA1A), '') || ' ' ||
+                                    CASE WHEN B.CFNA1B = '' THEN
+                                        COALESCE(TRIM(B.CFNA1), '')
+                                    ELSE
+                                        COALESCE(TRIM(B.CFNA1B),'')  || ' ' || COALESCE(TRIM(B.CFNA1), '')
+                                    END
+                    WHEN CFINDI = 'N'
+                            THEN COALESCE(CL_NAME,
+                                    COALESCE(TRIM(B.CFNA1A), '') || ' ' ||
+                                    CASE WHEN CFNA1B = '' THEN
+                                        COALESCE(TRIM(B.CFNA1), '')
+                                    ELSE
+                                        COALESCE(TRIM(B.CFNA1B),'')  || ' ' || COALESCE(TRIM(B.CFNA1), '')
+                                    END
+                                    )
+                ELSE ''
+                END AS CLIENT_NAME,
             TRIM(B.CFTINN) AS "TIN_NUMBER",
             '0' AS TRAN_TYPE,
             A.CREATED_DATE PROCESS_DATE,
             C.CICLS_PRODUCT_CODE,
@@ -21,9 +34,9 @@
             TRIM(B.CFTINN) AS "TIN_NUMBER",
             '0' AS TRAN_TYPE,
             A.CREATED_DATE PROCESS_DATE,
             C.CICLS_PRODUCT_CODE,
-            A.ORGLMT_IRR AS "APPROVED_AMOUNT",
-            A.TOSBAL_IRR AS "OUTSTANDING_CURRENT",
+            COALESCE(A.ORGLMT_IRR, 0) AS "APPROVED_AMOUNT",
+            COALESCE(A.TOSBAL_IRR, 0) AS "OUTSTANDING_CURRENT",
             0 AS "OUTSTANDING_PAST_DUE"
         FROM TFSDB2S.LNCLST_CICLS A
         LEFT JOIN TFSDB2S.CFMAST B
@@ -32,4 +45,5 @@
             ON A.PRODUCT_ID = C.PROD_ID
         LEFT JOIN TFSDB2S.LNAPPF D
             ON A.AFCPNO = D.AFCPNO
+            
         UNION ALL
@@ -35,8 +49,13 @@
         UNION ALL
-        SELECT A.CIFNO, B.CFSNME SHORTNAME, B.CFTINN, '0', A.CREATED_DATE, C.CICLS_PRODUCT_CODE
-             , A.LORGAMT
-             , A.LPMTAMT
-             , A.OUTSTANDING_PAST_DUE
+
+        SELECT A.CIFNO
+             , B.CFSNME SHORTNAME
+             , B.CFTINN, '0'
+             , A.CREATED_DATE
+             , C.CICLS_PRODUCT_CODE
+             , COALESCE(A.LORGAMT, 0)
+             , COALESCE(A.LPMTAMT, 0)
+             , COALESCE(A.OUTSTANDING_PAST_DUE, 0)
         FROM TFSDB2S.LNTFINT_CICLS A
         INNER JOIN TFSDB2S.CFMAST B
             ON A.CIFNO = B.CFCIF#
@@ -46,6 +65,9 @@
             ON A.ACCTNO = D.PNNUMBER
         LEFT JOIN TFSDB2S.LNAPPF E
             ON D.FACILITYREFERENCENUMBER = E.AFCPNO
+        WHERE C.CICLS_PRODUCT_CODE <> '300'
+        OR C.CICLS_PRODUCT_CODE <> ''
+   	    OR C.CICLS_PRODUCT_CODE IS NOT NULL
         ;
 
     OPEN C_CICLS;
diff --git a/Database_Programs/Loans and Facility Interface/INQUIRE_CONTINGENT.sql b/Database_Programs/Loans and Facility Interface/INQUIRE_CONTINGENT.sql
--- a/Database_Programs/Loans and Facility Interface/INQUIRE_CONTINGENT.sql	
+++ b/Database_Programs/Loans and Facility Interface/INQUIRE_CONTINGENT.sql	
@@ -1,4 +1,4 @@
---<SCRIPTOPTIONS STATEMENTTERMINATOR="@">
+--<ScriptOptions statementTerminator="@">
 CREATE OR REPLACE PROCEDURE TFSDB2S.INQUIRE_CONTIGENT(IN P_CIFNUMBER VARCHAR(7)
     , IN P_DOCUMENTNUMBER VARCHAR(21), IN P_ORIGINALAMOUNT DECIMAL(19, 2)
     , IN P_OUTSTANDINGBALANCE DECIMAL(19, 2), IN P_TRANSACTIONDATE DECIMAL(6 , 0)
@@ -31,8 +31,8 @@
        ON C.DOCUMENTCLASS = D.MOP_PRODUCT
           AND C.SERVICETYPE = D.SERVICE_TYPE
        WHERE REPLACE(B.TRADEPRODUCTNUMBER, '-', '') = P_DOCUMENTNUMBER);
-    SET V_IRR_RATE = (SELECT JFXDCR FROM TFSDB2S.JHFXDT
-        WHERE JFXDBC = 'PHP' AND JFXDCD = P_CURRENCYCODE AND JFXDRN = 3);
+    SET V_IRR_RATE = CASE WHEN P_CURRENCYCODE = 'PHP' THEN 1 ELSE (SELECT JFXDCR FROM TFSDB2S.JHFXDT
+        WHERE JFXDBC = 'PHP' AND JFXDCD = P_CURRENCYCODE AND JFXDRN = 3) END;
     SET V_CLIENT_NAME = (SELECT CFSNME FROM TFSDB2S.CFMAST WHERE CFCIF# = P_CIFNUMBER);
 
     INSERT INTO TFSDB2S.LNCLST(SYSCOD, CIFNO, ACCTNO, ORGLMT, TOSBAL, PRODUCT
diff --git a/Database_Programs/Loans and Facility Interface/PROCESS_CICLS.sql b/Database_Programs/Loans and Facility Interface/PROCESS_CICLS.sql
--- a/Database_Programs/Loans and Facility Interface/PROCESS_CICLS.sql	
+++ b/Database_Programs/Loans and Facility Interface/PROCESS_CICLS.sql	
@@ -19,7 +19,7 @@
         , ORGLMT_IRR, TOSBAL_IRR)
     WITH LATEST_TS AS (SELECT TRADEPRODUCTNUMBER, MAX(CREATEDDATE) CREATEDDATE
         FROM TRADESERVICE
-        WHERE DOCUMENTCLASS = 'LC' AND SERVICETYPE NOT IN ('UA_LOAN_SETTLEMENT', 'ADJUSTMENT')
+        WHERE DOCUMENTCLASS IN ('DA','OA','LC', 'INDEMNITY') AND SERVICETYPE NOT IN ('UA_LOAN_SETTLEMENT', 'ADJUSTMENT')
         GROUP BY TRADEPRODUCTNUMBER),
         IRR_RATES AS (SELECT JFXDCD, JFXDCR FROM TFSDB2S.JHFXDT WHERE JFXDBC = 'PHP' AND JFXDRN = 3),
         REV_INFO AS (
@@ -47,4 +47,8 @@
                 AND LOC.TENOR = 'SIGHT'
                 AND (LOC.TYPE = 'CASH' OR LOC.CASHFLAG = 1)
         )        
+    SELECT SYSCOD, CIFNO, ACCTNO, NAME, CIFID, CIFCOD, ORGLMT, TOSBAL, PRODUCT, PRODSC
+        , DATE, TIME, LORGAM, TLOSBAL, CURTYP, ALFLG, ADBBAL, STADSC, AFCPNO, ORGSBL
+        , LOCSBL, PROD_ID, CREATED_DATE, ORGLMT_IRR, TOSBAL_IRR
+        FROM (
     -- FACILITY AVAILMENT / LNCLST
@@ -50,111 +54,122 @@
     -- FACILITY AVAILMENT / LNCLST
-    SELECT A.SYSCOD, A.CIFNO, A.ACCTNO, A.NAME, A.CIFID, A.CIFCOD, A.ORGLMT, A.TOSBAL, A.PRODUCT, A.PRODSC
-        , A.DATE, A.TIME, A.LORGAM, A.TLOSBAL, A.CURTYP, A.ALFLG, A.ADBBAL, A.STADSC, A.AFCPNO, A.ORGSBL
-        , A.LOCSBL, D.PROD_ID, NOW(), A.ORGLMT_IRR, A.TOSBAL_IRR
-    FROM TFSDB2S.LNCLST A
-    INNER JOIN LATEST_TS B
-    ON A.ACCTNO = REPLACE(B.TRADEPRODUCTNUMBER, '-', '')
-    INNER JOIN TRADESERVICE C
-    ON B.TRADEPRODUCTNUMBER = C.TRADEPRODUCTNUMBER
-        AND B.CREATEDDATE = C.CREATEDDATE
-    LEFT JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING D
-    ON C.DOCUMENTCLASS = D.MOP_PRODUCT
-       AND C.SERVICETYPE = D.SERVICE_TYPE
-    -- CASH LC
-    UNION ALL
-    SELECT 'TF', C.CIFNUMBER, REPLACE(A.DOCUMENTNUMBER, '-', ''), G.CFSNME, NULL, NULL, C.AMOUNT, A.OUTSTANDINGBALANCE, '25', NULL
-        , NULL, NULL, DECODE(C.CURRENCY , 'PHP', C.AMOUNT
-            , C.AMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = C.CURRENCY))
-        , DECODE(C.CURRENCY , 'PHP', A.OUTSTANDINGBALANCE
-            , A.OUTSTANDINGBALANCE * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = C.CURRENCY))
-        , C.CURRENCY, 'A', 0, 'CURRENT', '', 0, 0, F.PROD_ID, NOW()
-        , DECODE(C.CURRENCY , 'PHP', C.AMOUNT
-            , C.AMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = C.CURRENCY))
-        , DECODE(C.CURRENCY , 'PHP', A.OUTSTANDINGBALANCE
-            , A.OUTSTANDINGBALANCE * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = C.CURRENCY))
-    FROM FINAL_CASH A
-    LEFT JOIN LETTEROFCREDIT_AUDIT B
-        ON A.DOCUMENTNUMBER = B.DOCUMENTNUMBER
-            AND A.LASTMODIFIEDDATE = B.LASTMODIFIEDDATE
-    LEFT JOIN TRADEPRODUCT_AUDIT C
-        ON B.DOCUMENTNUMBER = C.DOCUMENTNUMBER
-            AND B.REV_ID = C.REV_ID
-    INNER JOIN LATEST_TS D
-        ON B.DOCUMENTNUMBER = D.TRADEPRODUCTNUMBER
-    INNER JOIN TRADESERVICE E
-        ON D.TRADEPRODUCTNUMBER = E.TRADEPRODUCTNUMBER
-            AND D.CREATEDDATE = E.CREATEDDATE
-    LEFT JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING F
-        ON E.DOCUMENTCLASS = F.MOP_PRODUCT
-           AND E.SERVICETYPE = F.SERVICE_TYPE
-    INNER JOIN TFSDB2S.CFMAST G
-        ON C.CIFNUMBER = G.CFCIF#
-    WHERE C.STATUS <> 'EXPIRED'
-        AND C.STATUS <> 'CANCELLED'
-        AND C.STATUS <> 'CLOSED'
-        AND A.OUTSTANDINGBALANCE > 0
-    -- OA, DA
-    UNION ALL
-    SELECT 'TF', A.CIFNUMBER, REPLACE(A.DOCUMENTNUMBER, '-', ''), G.CFSNME, NULL, NULL, DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT)
-        , DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT), '25', NULL, NULL, NULL
-        , DECODE(A.CURRENCY , 'PHP', DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT)
-            , DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT) * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURRENCY))
-        , DECODE(A.CURRENCY , 'PHP', DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT)
-            , DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT) * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURRENCY))
-        , A.CURRENCY, 'A', 0, 'CURRENT', '', 0, 0, F.PROD_ID, NOW()
-        , DECODE(A.CURRENCY , 'PHP', DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT)
-            , DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT) * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURRENCY))
-        , DECODE(A.CURRENCY , 'PHP', DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT)
-            , DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT) * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURRENCY))
-    FROM TRADEPRODUCT AS A
-    LEFT JOIN DOCUMENTAGAINSTACCEPTANCE AS B
-        ON A.DOCUMENTNUMBER = B.DOCUMENTNUMBER
-    LEFT JOIN OPENACCOUNT AS C
-        ON A.DOCUMENTNUMBER = C.DOCUMENTNUMBER
-    INNER JOIN LATEST_TS D
-        ON A.DOCUMENTNUMBER = D.TRADEPRODUCTNUMBER
-    INNER JOIN TRADESERVICE E
-        ON D.TRADEPRODUCTNUMBER = E.TRADEPRODUCTNUMBER
-            AND D.CREATEDDATE = E.CREATEDDATE
-    LEFT JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING F
-        ON E.DOCUMENTCLASS = F.MOP_PRODUCT
-           AND E.SERVICETYPE = F.SERVICE_TYPE
-    INNER JOIN TFSDB2S.CFMAST G
-        ON A.CIFNUMBER = G.CFCIF#
-    WHERE A.PRODUCTTYPE IN ('DA', 'OA')
-    AND (B.DOCUMENTTYPE = 'FOREIGN' OR C.DOCUMENTTYPE = 'FOREIGN')
-    AND (A.STATUS = 'NEGOTIATED' OR A.STATUS ='ACCEPTED')
-    -- BG
-    UNION ALL
-    SELECT 'TF', B.CIFNUMBER, REPLACE(A.INDEMNITYNUMBER, '-', ''), F.CFSNME, NULL, NULL, A.SHIPMENTAMOUNT
-        , A.SHIPMENTAMOUNT, '25', NULL, NULL, NULL
-        , DECODE(B.CURRENCY , 'PHP', A.SHIPMENTAMOUNT
-            , A.SHIPMENTAMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = B.CURRENCY))
-        , DECODE(B.CURRENCY , 'PHP', A.SHIPMENTAMOUNT
-            , A.SHIPMENTAMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = B.CURRENCY))
-        , B.CURRENCY, 'A', 0, 'CURRENT', '', 0, 0, E.PROD_ID, NOW()
-        , DECODE(B.CURRENCY , 'PHP', A.SHIPMENTAMOUNT
-            , A.SHIPMENTAMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = B.CURRENCY))
-        , DECODE(B.CURRENCY , 'PHP', A.SHIPMENTAMOUNT
-            , A.SHIPMENTAMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = B.CURRENCY))
-    FROM INDEMNITY A
-    INNER JOIN TRADEPRODUCT AS B
-        ON A.INDEMNITYNUMBER = B.DOCUMENTNUMBER
-    INNER JOIN LATEST_TS C
-        ON A.INDEMNITYNUMBER = C.TRADEPRODUCTNUMBER
-    INNER JOIN TRADESERVICE D
-        ON C.TRADEPRODUCTNUMBER = D.TRADEPRODUCTNUMBER
-            AND C.CREATEDDATE = D.CREATEDDATE
-    LEFT JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING E
-        ON D.DOCUMENTCLASS = E.MOP_PRODUCT
-           AND D.SERVICETYPE = E.SERVICE_TYPE
-    INNER JOIN TFSDB2S.CFMAST F
-        ON B.CIFNUMBER = F.CFCIF#
-    WHERE DAYS_BETWEEN(NOW(), A.INDEMNITYISSUEDATE) > 60
-        AND A.SHIPMENTAMOUNT > 0
-        AND A.INDEMNITYTYPE = 'BG'
-        AND B.STATUS = 'OPEN'
-    ;
+        SELECT A.SYSCOD, A.CIFNO, A.ACCTNO, A.NAME, A.CIFID, A.CIFCOD, A.ORGLMT, A.TOSBAL, A.PRODUCT, A.PRODSC
+            , A.DATE, A.TIME, A.LORGAM, A.TLOSBAL, A.CURTYP, A.ALFLG, A.ADBBAL, A.STADSC, A.AFCPNO, A.ORGSBL
+            , A.LOCSBL, D.PROD_ID, NOW() AS "CREATED_DATE"
+            , DECODE(A.CURTYP, 'PHP', A.ORGLMT, A.ORGLMT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURTYP)) AS "ORGLMT_IRR"
+            , DECODE(A.CURTYP, 'PHP', A.TOSBAL, A.TOSBAL * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURTYP)) AS "TOSBAL_IRR"
+            , C.STATUS
+        FROM TFSDB2S.LNCLST A
+        INNER JOIN LATEST_TS B
+        ON A.ACCTNO = REPLACE(B.TRADEPRODUCTNUMBER, '-', '')
+        INNER JOIN TRADESERVICE C
+        ON B.TRADEPRODUCTNUMBER = C.TRADEPRODUCTNUMBER
+            AND B.CREATEDDATE = C.CREATEDDATE
+        LEFT JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING D
+        ON C.DOCUMENTCLASS = D.MOP_PRODUCT
+            AND C.SERVICETYPE = D.SERVICE_TYPE
+            AND C.STATUS NOT IN ( 'EXPIRED', 'RETURNED', 'PENDING' )
+        -- CASH LC
+        UNION ALL
+        SELECT 'TF', C.CIFNUMBER, REPLACE(A.DOCUMENTNUMBER, '-', ''), G.CFSNME, NULL, NULL, C.AMOUNT, A.OUTSTANDINGBALANCE, '25', NULL
+            , NULL, NULL, DECODE(C.CURRENCY , 'PHP', C.AMOUNT
+                , C.AMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = C.CURRENCY))
+            , DECODE(C.CURRENCY , 'PHP', A.OUTSTANDINGBALANCE
+                , A.OUTSTANDINGBALANCE * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = C.CURRENCY))
+            , C.CURRENCY, 'A', 0, 'CURRENT', '', 0, 0, F.PROD_ID, NOW() AS "CREATED_DATE"
+            , DECODE(C.CURRENCY , 'PHP', C.AMOUNT
+                , C.AMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = C.CURRENCY))
+            , DECODE(C.CURRENCY , 'PHP', A.OUTSTANDINGBALANCE
+                , A.OUTSTANDINGBALANCE * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = C.CURRENCY))
+            , E.STATUS
+        FROM FINAL_CASH A
+        LEFT JOIN LETTEROFCREDIT_AUDIT B
+            ON A.DOCUMENTNUMBER = B.DOCUMENTNUMBER
+                AND A.LASTMODIFIEDDATE = B.LASTMODIFIEDDATE
+        LEFT JOIN TRADEPRODUCT_AUDIT C
+            ON B.DOCUMENTNUMBER = C.DOCUMENTNUMBER
+                AND B.REV_ID = C.REV_ID
+        INNER JOIN LATEST_TS D
+            ON B.DOCUMENTNUMBER = D.TRADEPRODUCTNUMBER
+        INNER JOIN TRADESERVICE E
+            ON D.TRADEPRODUCTNUMBER = E.TRADEPRODUCTNUMBER
+                AND D.CREATEDDATE = E.CREATEDDATE
+        LEFT JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING F
+            ON E.DOCUMENTCLASS = F.MOP_PRODUCT
+            AND E.SERVICETYPE = F.SERVICE_TYPE
+        INNER JOIN TFSDB2S.CFMAST G
+            ON C.CIFNUMBER = G.CFCIF#
+        WHERE C.STATUS <> 'EXPIRED'
+            AND C.STATUS <> 'CANCELLED'
+            AND C.STATUS <> 'CLOSED'
+            AND A.OUTSTANDINGBALANCE > 0
+            AND E.STATUS NOT IN ( 'EXPIRED', 'RETURNED', 'PENDING' )
+        -- OA, DA
+        UNION ALL
+        SELECT 'TF', A.CIFNUMBER, REPLACE(A.DOCUMENTNUMBER, '-', ''), G.CFSNME, NULL, NULL, DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT)
+            , DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT), '25', NULL, NULL, NULL
+            , DECODE(A.CURRENCY , 'PHP', DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT)
+                , DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT) * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURRENCY))
+            , DECODE(A.CURRENCY , 'PHP', DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT)
+                , DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT) * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURRENCY))
+            , A.CURRENCY, 'A', 0, 'CURRENT', '', 0, 0, F.PROD_ID, NOW() AS "CREATED_DATE"
+            , DECODE(A.CURRENCY , 'PHP', DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT)
+                , DECODE(A.PRODUCTTYPE, 'DA', B.AMOUNT, C.AMOUNT) * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURRENCY))
+            , DECODE(A.CURRENCY , 'PHP', DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT)
+                , DECODE(A.PRODUCTTYPE, 'DA', B.OUTSTANDINGAMOUNT, C.OUTSTANDINGAMOUNT) * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = A.CURRENCY))
+            , E.STATUS
+        FROM TRADEPRODUCT AS A
+        LEFT JOIN DOCUMENTAGAINSTACCEPTANCE AS B
+            ON A.DOCUMENTNUMBER = B.DOCUMENTNUMBER
+        LEFT JOIN OPENACCOUNT AS C
+            ON A.DOCUMENTNUMBER = C.DOCUMENTNUMBER
+        INNER JOIN LATEST_TS D
+            ON A.DOCUMENTNUMBER = D.TRADEPRODUCTNUMBER
+        INNER JOIN TRADESERVICE E
+            ON D.TRADEPRODUCTNUMBER = E.TRADEPRODUCTNUMBER
+                AND D.CREATEDDATE = E.CREATEDDATE
+        LEFT JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING F
+            ON E.DOCUMENTCLASS = F.MOP_PRODUCT
+            AND E.SERVICETYPE = F.SERVICE_TYPE
+        INNER JOIN TFSDB2S.CFMAST G
+            ON A.CIFNUMBER = G.CFCIF#
+        WHERE A.PRODUCTTYPE IN ('DA', 'OA', 'LC')
+        AND (B.DOCUMENTTYPE = 'FOREIGN' OR C.DOCUMENTTYPE = 'FOREIGN')
+        AND (A.STATUS = 'NEGOTIATED' OR A.STATUS ='ACCEPTED')
+        AND E.STATUS NOT IN ( 'EXPIRED', 'RETURNED', 'PENDING' )
+        -- BG
+        UNION ALL
+        SELECT 'TF', B.CIFNUMBER, REPLACE(A.INDEMNITYNUMBER, '-', ''), F.CFSNME, NULL, NULL, A.SHIPMENTAMOUNT
+            , A.SHIPMENTAMOUNT, '25', NULL, NULL, NULL
+            , DECODE(B.CURRENCY , 'PHP', A.SHIPMENTAMOUNT
+                , A.SHIPMENTAMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = B.CURRENCY))
+            , DECODE(B.CURRENCY , 'PHP', A.SHIPMENTAMOUNT
+                , A.SHIPMENTAMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = B.CURRENCY))
+            , B.CURRENCY, 'A', 0, 'CURRENT', '', 0, 0, E.PROD_ID, NOW() AS "CREATED_DATE"
+            , DECODE(B.CURRENCY , 'PHP', A.SHIPMENTAMOUNT
+                , A.SHIPMENTAMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = B.CURRENCY))
+            , DECODE(B.CURRENCY , 'PHP', A.SHIPMENTAMOUNT
+                , A.SHIPMENTAMOUNT * (SELECT JFXDCR FROM IRR_RATES WHERE JFXDCD = B.CURRENCY))
+            , D.STATUS
+        FROM INDEMNITY A
+        INNER JOIN TRADEPRODUCT AS B
+            ON A.INDEMNITYNUMBER = B.DOCUMENTNUMBER
+        INNER JOIN LATEST_TS C
+            ON A.INDEMNITYNUMBER = C.TRADEPRODUCTNUMBER
+        INNER JOIN TRADESERVICE D
+            ON C.TRADEPRODUCTNUMBER = D.TRADEPRODUCTNUMBER
+                AND C.CREATEDDATE = D.CREATEDDATE
+        LEFT JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING E
+            ON D.DOCUMENTCLASS = E.MOP_PRODUCT
+            AND D.SERVICETYPE = E.SERVICE_TYPE
+        INNER JOIN TFSDB2S.CFMAST F
+            ON B.CIFNUMBER = F.CFCIF#
+        WHERE 
+            -- DAYS_BETWEEN(NOW(), A.INDEMNITYISSUEDATE) > 60
+            AND A.SHIPMENTAMOUNT > 0
+            AND A.INDEMNITYTYPE = 'BG'
+            AND B.STATUS = 'OPEN'
+            AND E.STATUS NOT IN ( 'EXPIRED', 'RETURNED', 'PENDING' )
+        );
 
     DELETE FROM TFSDB2S.LNTFINT_CICLS;
     INSERT INTO TFSDB2S.LNTFINT_CICLS(AANO, FCODE, FSEQ, TRSEQ, ACCTNO
@@ -165,9 +180,27 @@
         , TAMTOR, TEXP6, TRSTS, TRUNLINK, TRUSERID, CRDTCD, PMTCOD
         , REQSTS, SYSCOD, RS4FLG, PRODUCT_ID, OUTSTANDING_PAST_DUE, LOAN_STATUS
         , CREATED_DATE, LORGAMT, LPMTAMT)
+    -- -- SELECT AANO, FCODE, FSEQ, A.TRSEQ, A.ACCTNO
+    -- --     , ACTYPE, "BR#", "RBR#", "TYPE", CURTYP, SNAME, CIFNO
+    -- --     , TERM, TMCODE, LORGAMT, ORGDT6, RATE, LPMTAMT
+    -- --     , CFPDT, DRLIMT, MATDT6, OFFCR, FREQ, FRCODE
+    -- --     , IPFREQ, IPCODE, GLBOOK, "GROUP", TRIM(TNUMBR), TIMPOR
+    -- --     , TAMTOR, TEXP6, TRSTS, TRUNLINK, TRUSERID, CRDTCD, PMTCOD
+    -- --     , REQSTS, SYSCOD, RS4FLG, PRODUCT_ID, OUTSTANDING_PAST_DUE, LOAN_STATUS
+    -- --     , NOW(), LORGAMT, LPMTAMT
+    -- -- FROM TFSDB2S.LNTFINT A
+    -- -- -- REMOVAL OF REVERSED(UNLINKED) PAYMENTS
+    -- -- INNER JOIN (SELECT ACCTNO, MAX(TRSEQ) TRSEQ
+    -- --     FROM TFSDB2S.LNTFINT
+    -- --     GROUP BY ACCTNO) B
+    -- -- ON A.ACCTNO = B.ACCTNO
+    -- --     AND A.TRSEQ = B.TRSEQ
+    -- --     AND 1 = MOD((SELECT COUNT(*) FROM TFSDB2S.LNTFINT WHERE ACCTNO = A.ACCTNO), 2)
+    -- --     AND A.LOAN_STATUS <> 'PAID'
+    -- -- WHERE A.TRSTS = 'Y';
     SELECT AANO, FCODE, FSEQ, A.TRSEQ, A.ACCTNO
         , ACTYPE, "BR#", "RBR#", "TYPE", CURTYP, SNAME, CIFNO
         , TERM, TMCODE, LORGAMT, ORGDT6, RATE, LPMTAMT
         , CFPDT, DRLIMT, MATDT6, OFFCR, FREQ, FRCODE
         , IPFREQ, IPCODE, GLBOOK, "GROUP", TRIM(TNUMBR), TIMPOR
         , TAMTOR, TEXP6, TRSTS, TRUNLINK, TRUSERID, CRDTCD, PMTCOD
@@ -168,8 +201,8 @@
     SELECT AANO, FCODE, FSEQ, A.TRSEQ, A.ACCTNO
         , ACTYPE, "BR#", "RBR#", "TYPE", CURTYP, SNAME, CIFNO
         , TERM, TMCODE, LORGAMT, ORGDT6, RATE, LPMTAMT
         , CFPDT, DRLIMT, MATDT6, OFFCR, FREQ, FRCODE
         , IPFREQ, IPCODE, GLBOOK, "GROUP", TRIM(TNUMBR), TIMPOR
         , TAMTOR, TEXP6, TRSTS, TRUNLINK, TRUSERID, CRDTCD, PMTCOD
-        , REQSTS, SYSCOD, RS4FLG, PRODUCT_ID, OUTSTANDING_PAST_DUE, LOAN_STATUS
+        , REQSTS, SYSCOD, RS4FLG, F.PROD_ID, OUTSTANDING_PAST_DUE, LOAN_STATUS
         , NOW(), LORGAMT, LPMTAMT
@@ -175,5 +208,4 @@
         , NOW(), LORGAMT, LPMTAMT
-    FROM TFSDB2S.LNTFINT A
-    -- REMOVAL OF REVERSED(UNLINKED) PAYMENTS
-    INNER JOIN (SELECT ACCTNO, MAX(TRSEQ) TRSEQ
+ 	FROM TFSDB2S.LNTFINT A
+ 	INNER JOIN (SELECT ACCTNO, MAX(TRSEQ) TRSEQ
         FROM TFSDB2S.LNTFINT
@@ -179,3 +211,4 @@
         FROM TFSDB2S.LNTFINT
+        WHERE TRUNLINK = 'N'
         GROUP BY ACCTNO) B
     ON A.ACCTNO = B.ACCTNO
@@ -180,7 +213,16 @@
         GROUP BY ACCTNO) B
     ON A.ACCTNO = B.ACCTNO
-        AND A.TRSEQ = B.TRSEQ
-        AND 1 = MOD((SELECT COUNT(*) FROM TFSDB2S.LNTFINT WHERE ACCTNO = A.ACCTNO), 2)
-        AND A.LOAN_STATUS <> 'PAID'
-    WHERE A.TRSTS = 'Y';
+	INNER JOIN TFSDB2P.PAYMENTDETAIL C
+	 	ON A.ACCTNO = C.PNNUMBER
+	INNER JOIN TFSDB2P.PAYMENT D
+	 	ON C.PAYMENTID = D.ID
+	INNER JOIN TFSDB2P.TRADESERVICE E
+	 	ON D.TRADESERVICEID = E.TRADESERVICEID
+	INNER JOIN TFSDB2S.PROD_PAYMNT_CICLS_MAPPING F
+		ON E.DOCUMENTCLASS = F.MOP_PRODUCT
+		AND E.SERVICETYPE = F.SERVICE_TYPE
+    WHERE
+	   A.LOAN_STATUS NOT IN ('CANCEL', 'PAID')
+	   AND A.TRSTS = 'Y'
+	   AND E.STATUS <>'APPROVED';
 END P1@
diff --git a/tfs-app/src/main/java/com/ucpb/tfs/application/query/interfaces/FacilityService.java b/tfs-app/src/main/java/com/ucpb/tfs/application/query/interfaces/FacilityService.java
deleted file mode 100644
--- a/tfs-app/src/main/java/com/ucpb/tfs/application/query/interfaces/FacilityService.java
+++ /dev/null
@@ -1,42 +0,0 @@
-package com.ucpb.tfs.application.query.interfaces;
-
-
-import java.util.List;
-import java.util.Map;
-
-/*
-	(revision)
-	SCR/ER Number: ER# 20170109-040
-	SCR/ER Description: Transaction allowed to be created even the facility is expired
-	[Revised by:] Jesse James Joson
-	[Date revised:] 1/17/2017
-	Program [Revision] Details: Check the expiry date of the facility before allowing to amend LC
-	Member Type: Java
-	Project: Core
-	Project Name: FacilityService.java
-*/
-
-public interface FacilityService {
-
-	public List<Map<String,?>> getFacilitiesByCifNumber(String cifNumber);
-	
-	public List<Map<String,?>> getFacilitiesByChildAndMainCifNumber(String childCifNumber, String mainCifNumber, String facilityType);
-	
-	public List<Map<String,Object>> getFacilitiesByCifNumberAndType(String cifNumber, String type);
-
-//    public List<Map<String,Object>> getFacilitiesByCifNumberAndFacilityTypes(String cifNumber,String... facilityTypes);
-public List<Map<String,Object>> getFacilitiesByCifNumberAndFacilityTypes(String cifNumber,String mainCifNumber,String seqNo, String... facilityTypes);
-
-    public List<Map<String,Object>> getFacilitiesByCifNumberAndFacilityTypesSearch(String cifNumber,
-																				   String mainCifNumber,
-                                                                                   String seqNo,
-                                                                                   String... facilityTypes);
-
-
-    public Map<String,Object> getFacilityBalance(Long transactionSequenceNumber);
-
-//    public List<Map<String,Object>> getFacilitiesByCifCurrencyAndFacilityTypes(String cifNumber,String currency, String... facilityTypes);
-public List<Map<String,Object>> getFacilitiesByCifCurrencyAndFacilityTypes(String cifNumber,String mainCifNumber,String currency,String seqNo, String... facilityTypes);
-
-	public List<Map<String,Object>> getFacilitiesByCifAndFacility(String cifNumber, String facilityRefNo, String facilityType, String facilityId);
-}
diff --git a/tfs-batch/src/main/java/com/ucpb/tfs/batch/job/CiclsReportGeneratorJob.java b/tfs-batch/src/main/java/com/ucpb/tfs/batch/job/CiclsReportGeneratorJob.java
--- a/tfs-batch/src/main/java/com/ucpb/tfs/batch/job/CiclsReportGeneratorJob.java
+++ b/tfs-batch/src/main/java/com/ucpb/tfs/batch/job/CiclsReportGeneratorJob.java
@@ -55,7 +55,7 @@
         File tempFailFile = new File(failFileName);
 
         for (CiclsHandoffRecord ciclsRec : ciclsList) {
-            if(validateListCicls(ciclsRec)){
+            if(validateListCicls(ciclsRec) && validateCiclsLength(ciclsRec)){
                 successList.add(ciclsRec);
             }
             else{
@@ -110,4 +110,5 @@
     private Boolean validateListCicls(CiclsHandoffRecord records) {
         return !( 
             records.getTinNumber() == null ||
+            records.getTinNumber().trim().isEmpty() ||
             records.getClientName() == null ||
@@ -113,4 +114,4 @@
             records.getClientName() == null ||
-            records.getTranType() == null ||
+            records.getClientName().trim().isEmpty() ||
             records.getProcessDate() == null ||
             records.getCiclsProductCode() == null ||
@@ -115,4 +116,5 @@
             records.getProcessDate() == null ||
             records.getCiclsProductCode() == null ||
+            records.getCiclsProductCode().trim().isEmpty() ||
             records.getApprovedAmount() == null ||
             records.getOutstandingCurrent() == null ||
@@ -117,6 +119,6 @@
             records.getApprovedAmount() == null ||
             records.getOutstandingCurrent() == null ||
-            records.getOutstandingPastDue() == null 
+            records.getOutstandingPastDue() == null
         );
     }
 
@@ -120,6 +122,22 @@
         );
     }
 
+    public Boolean validateCiclsLength(CiclsHandoffRecord ciclsRec) {
+        if(ciclsRec.getApprovedAmount() != null || 
+           ciclsRec.getOutstandingCurrent() != null ||
+           ciclsRec.getOutstandingPastDue() != null){
+            int approvedAmount = ciclsRec.getApprovedAmount().precision();
+            int outstandingCurrent = ciclsRec.getOutstandingCurrent().precision();
+            int outstandingPastDue = ciclsRec.getOutstandingPastDue().precision();
+            if(approvedAmount > 18 || 
+               outstandingCurrent > 18 ||
+               outstandingPastDue > 18 ){
+                return false;
+            }
+        }
+        return true;
+    }
+
     public void setCiclsDao(CiclsDao ciclsDao) {
         this.ciclsDao = ciclsDao;
     }
