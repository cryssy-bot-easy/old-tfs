<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- DataSource: hsqldb file -->
    <!--destroy-method="close"-->
    <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" >
        <!--
        <property name="driverClassName" value="com.ibm.db2.jcc.DB2Driver" />
        <property name="url" value="jdbc:db2://localhost:50000/SAMPLE" />
        <property name="username" value="db2admin" />
        <property name="password" value="db2admin" />
        -->
<!--
        <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
        <property name="url" value="jdbc:hsqldb:mem:.;shutdown=false;sql.enforce_size=false" />
        <property name="username" value="sa" />
        <property name="password" value="" />
-->
        <property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver" />
        <property name="url" value="jdbc:derby://localhost:1527/tfsdb" />
        <property name="username" value="tfs" />
        <property name="password" value="tfs" />
    </bean>

<!--     <jdbc:embedded-database id="myDataSource" type="HSQL"> -->
<!--     </jdbc:embedded-database> -->

    <bean id="mySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="mappingDirectoryLocations">
            <list>
                <value>classpath:hibernate/mapping/settlementaccount</value>
                <value>classpath:hibernate/mapping/mtmessage</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.DB2Dialect</prop>-->
                <prop key="hibernate.dialect">org.hibernate.dialect.DerbyTenSevenDialect</prop>
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>-->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">false</prop>
                <!--<prop key="infrastructure.repositories.hibernate.current_session_context_class">jta</prop>-->
                <!--<prop key="infrastructure.repositories.hibernate.current_session_context_class">thread</prop>-->
                <prop key="hibernate.connection.pool_size">1</prop>
                <!--<prop key="infrastructure.repositories.hibernate.cache.provider_class">org.infrastructure.repositories.hibernate.cache.NoCacheProvider</prop>-->
            </props>
        </property>
    </bean>

    <!-- Transaction management -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="mySessionFactory"/>
    </bean>

    <!-- these two are use to initialize the event publisher and the event listener registrar -->
    <bean class="com.incuventure.ddd.infrastructure.events.impl.SimpleEventPublisher" />
    <bean class="com.incuventure.ddd.infrastructure.events.impl.EventListenerProcessor" />

    <bean class="com.incuventure.cqrs.infrastructure.StandardCommandHandlerProvider" />
    <bean class="com.incuventure.cqrs.infrastructure.StandardCommandBus" />

    <bean id="settlementAccountRepository" class="com.ucpb.tfs.domain.settlementaccount.infrastructure.repositories.hibernate.HibernateSettlementAccountRepository"/>
    <bean id="marginalDepositRepository" class="com.ucpb.tfs.domain.settlementaccount.infrastructure.repositories.hibernate.HibernateMarginalDepositRepository"/>
    <bean id="accountsPayableRepository" class="com.ucpb.tfs.domain.settlementaccount.infrastructure.repositories.hibernate.HibernateAccountsPayableRepository"/>
    <bean id="accountsReceivableRepository" class="com.ucpb.tfs.domain.settlementaccount.infrastructure.repositories.hibernate.HibernateAccountsReceivableRepository"/>

    <bean id="mtMessageRepository" class="com.ucpb.tfs.domain.mtmessage.infrastructure.repositories.hibernate.HibernateMtMessageRepository"/>

    <!-- this one is for CQRS rest with MyBatis-Spring -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="mapperLocations" value="classpath*:/mybatis/mapping/**/*.xml"/>
    </bean>

    <bean id="finderComponentScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--<property name="basePackage" value="com.incuventure.tests.queries"/>-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
        <!-- <property name="basePackage" value="com.ipc.rbac.application.rest" /> -->
        <property name="basePackage" value="com.ucpb.tfs.application.query.settlementaccount" />
        <!-- <property name="basePackage" value="com.ucpb.tfs.application.rest.instruction" /> -->
        <!--<property name="basePackage" value="com"/>-->
    </bean>

    <!--
    <context:component-scan base-package="com.ipc.rbac.application.command"></context:component-scan>
    <context:component-scan base-package="com.ipc.rbac.application.commandhandler"></context:component-scan>

    <context:component-scan base-package="com.ucpb.tfs.application.command.instruction"></context:component-scan>
    <context:component-scan base-package="com.ucpb.tfs.application.commandhandler.instruction"></context:component-scan>
    -->

    <context:annotation-config/>

</beans>
