<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="dblogger" class="com.ucpb.tfs.batch.listener.DbLoggingJobListener">
        <constructor-arg name="jdbcTemplate" ref="tfsJdbcTemplate"/>
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" id="scheduler">
        <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
        <property name="overwriteExistingJobs" value="true"/>
        <property name="jobDetails">
            <list>
                <ref bean="tradeServiceExpireJobDetail"/>
                <ref bean="tradeServiceRevertJobDetail"/>
                <!--<ref bean="cancelDormantEtsJobDetail"/>-->
                <ref bean="purgeDormantEtsJobDetail"/>
                <ref bean="glReportGeneratorJobDetail"/>
                <ref bean="glAllocationsReportJobDetail"/>
                <ref bean="glParameterFileJobDetail"/>
                <ref bean="dwParameterRecordJobDetail"/>
                <ref bean="recordEndOfDayBalanceJobDetail"/>
                <ref bean="cbrParameterRecordJobDetail"/>
            </list>
        </property>
        <property name="triggers">
            <list>
                <ref bean="tradeServiceRevertTrigger"/>
                <!--<ref bean="cancelDormantEtsJobTrigger"/>-->
                <ref bean="purgeDormantEtsJobTrigger"/>
                <ref bean="glReportGeneratorJobTrigger"/>
                <ref bean="glAllocationsReportJobTrigger"/>
                <ref bean="glParameterFileJobTrigger"/>
                <ref bean="dwParameterRecordJobTrigger"/>
                <ref bean="recordEndOfDayBalanceJobTrigger"/>
                <ref bean="cbrParameterRecordJobTrigger"/>
            </list>
        </property>
        <property name="globalJobListeners">
            <list>
                <ref bean="dblogger"/>
            </list>
        </property>
        <property name="dataSource" ref="myDataSource"/>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
                <prop key="org.quartz.jobStore.isClustered">${quartz.isclustered}</prop>
                <prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>
                <prop key="org.quartz.jobStore.class">${jdbc.jobstore}</prop>
                <prop key="org.quartz.dataSource.myDS.driver">${jdbc.driver}</prop>
                <prop key="org.quartz.jobStore.driverDelegateClass">${jdbc.driver.delegate}</prop>
                <prop key="org.quartz.jobStore.tablePrefix">${quartz.table.prefix}</prop>
                <prop key="org.quartz.dataSource.myDS.URL">#{encryptedProperties['quartz.database.url']}</prop>
                <prop key="org.quartz.dataSource.myDS.user">${quartz.database.user}</prop>
                <prop key="org.quartz.dataSource.myDS.password">#{encryptedProperties['quartz.database.password']}</prop>
                <prop key="org.quartz.dataSource.myDS.maxConnections">${quartz.database.max.conn}</prop>
            </props>
        </property>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

</beans>