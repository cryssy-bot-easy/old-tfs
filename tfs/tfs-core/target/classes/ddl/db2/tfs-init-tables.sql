CREATE TABLE ACCOUNTLOG
(
    ID BIGINT PRIMARY KEY NOT NULL,
    DATE_CREATED TIMESTAMP,
    ACCOUNTNUMBER VARCHAR(50),
    ACCOUNTTYPE VARCHAR(15),
    INITIALDEPOSIT DECIMAL(18,2),
    ACCOUNTPURPOSE VARCHAR(50),
    MONTHLYESTIMATEDTRANSACTIONCOUNT INT,
    MONTHLYESTIMATEDTRANSACTIONVOLUME INT,
    TRANSACTIONTYPES VARCHAR(15),
    BRANCHCODE VARCHAR(15),
    OPENINGDATE TIMESTAMP,
    CLOSINGDATE TIMESTAMP,
    RISKSCORE VARCHAR(1),
    ACCOUNTBALANCE DECIMAL(18,2),
    APPLICATIONCODE VARCHAR(2),
    STATUS VARCHAR(5),
    ACCOUNTCURRENCY VARCHAR(3),
    PAYROLLTAG VARCHAR(1)
);
CREATE TABLE ACCOUNTSPAYABLE
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    SETTLEMENTACCOUNTNUMBER VARCHAR(30),
    SETTLEMENTACCOUNTTYPE VARCHAR(10),
    STATUS VARCHAR(11),
    CIFNUMBER VARCHAR(10),
    CIFNAME VARCHAR(255),
    ACCOUNTOFFICER VARCHAR(100),
    CCBDBRANCHUNITCODE VARCHAR(10),
    MODIFIEDDATE TIMESTAMP,
    CURRENCY VARCHAR(3),
    APOUTSTANDINGBALANCE DECIMAL(19,2),
    NATUREOFTRANSACTION VARCHAR(100),
    BOOKINGDATE TIMESTAMP,
    ORIGINALAMOUNT DECIMAL(19,2),
    TRADESERVICEID VARCHAR(36)
);
CREATE TABLE ACCOUNTSPAYABLEACTIVITY
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    SETTLEMENTACCOUNTTYPE VARCHAR(10),
    ACTIVITYTYPE VARCHAR(6),
    REFERENCETYPE VARCHAR(40),
    REFERENCENUMBER VARCHAR(30),
    AMOUNT DECIMAL(19,2),
    CURRENCY VARCHAR(3),
    STATUS VARCHAR(8),
    MODIFIEDDATE TIMESTAMP,
    BOOKINGDATE TIMESTAMP,
    APPLICATIONREFERENCENUMBER VARCHAR(40),
    NATUREOFTRANSACTION VARCHAR(100),
    ACCOUNTSPAYABLEID VARCHAR(36)
);
CREATE TABLE ACCOUNTSRECEIVABLE
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    SETTLEMENTACCOUNTNUMBER VARCHAR(30),
    SETTLEMENTACCOUNTTYPE VARCHAR(10),
    STATUS VARCHAR(11),
    CIFNUMBER VARCHAR(10),
    CIFNAME VARCHAR(255),
    ACCOUNTOFFICER VARCHAR(100),
    CCBDBRANCHUNITCODE VARCHAR(10),
    MODIFIEDDATE TIMESTAMP,
    CURRENCY VARCHAR(3),
    AROUTSTANDINGBALANCE DECIMAL(19,2),
    NATUREOFTRANSACTION VARCHAR(100),
    BOOKINGDATE TIMESTAMP,
    ORIGINALAMOUNT DECIMAL(19,2),
    TRADESERVICEID VARCHAR(36)
);
CREATE TABLE ACCOUNTSRECEIVABLEACTIVITY
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    SETTLEMENTACCOUNTTYPE VARCHAR(10),
    ACTIVITYTYPE VARCHAR(6),
    REFERENCETYPE VARCHAR(40),
    REFERENCENUMBER VARCHAR(30),
    AMOUNT DECIMAL(19,2),
    CURRENCY VARCHAR(3),
    STATUS VARCHAR(8),
    MODIFIEDDATE TIMESTAMP,
    BOOKINGDATE TIMESTAMP,
    APPLICATIONREFERENCENUMBER VARCHAR(40),
    NATUREOFTRANSACTION VARCHAR(100),
    ACCOUNTSRECEIVABLEID VARCHAR(36)
);
CREATE TABLE ADDITIONALCONDITION
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    CONDITIONCODE VARCHAR(10),
    CONDITION CLOB(3000),
    CONDITIONTYPE VARCHAR(7),
    TRADESERVICEID VARCHAR(36)
);
CREATE TABLE ADVANCEPAYMENT
(
    DOCUMENTNUMBER VARCHAR(21) PRIMARY KEY NOT NULL,
    PAYMENT_STATUS VARCHAR(19),
    ADV_PAYMENT_TYPE VARCHAR(6),
    WITHCWT SMALLINT,
    EXPORTERCBCODE VARCHAR(15),
    EXPORTERNAME VARCHAR(50),
    IMPORTERCBCODE VARCHAR(15),
    IMPORTERNAME VARCHAR(50),
    CORRESBANK_CODE VARCHAR(11),
    ACCT_TYPE VARCHAR(4),
    COUNTRY_CODE VARCHAR(3),
    SHIP_DATE TIMESTAMP,
    CREDITFACILITY VARCHAR(9),
    RECIEVINGBANK_CODE VARCHAR(11),
    SENDERS_REF VARCHAR(11),
    BANK_OPCODE VARCHAR(16),
    VALUE_DATE TIMESTAMP,
    ORDR_ACCT_NUMBER VARCHAR(20),
    ORDR_CUSTMR_NAME VARCHAR(50),
    ORDR_CUSTMR_ADDRESS VARCHAR(160),
    ACCT_WITH_INST VARCHAR(20),
    ACCT_WITH_INST_NAMEADD VARCHAR(160),
    BENEFICIARY_NAME VARCHAR(50),
    BENEFICIARY_ADDRESS VARCHAR(160),
    BENEFICIARY_ACCTNO VARCHAR(20),
    CHARGES_DETAILS VARCHAR(3),
    SENDER_RECEIVER_INFO VARCHAR(50),
    FUNDING_REFNO VARCHAR(20),
    SWIFT VARCHAR(20),
    BANK VARCHAR(20),
    BENEFICIARY VARCHAR(50),
    BY_BYO VARCHAR(50),
    BUYER_CASA_NO VARCHAR(20),
    BUYER_NAME VARCHAR(50),
    BUYER_ADDRESS VARCHAR(160),
    SELLER_CASA_NO VARCHAR(20),
    SELLER_NAME VARCHAR(50),
    SELLER_ADDRESS VARCHAR(160),
    REIMBBANK_CODE VARCHAR(11),
    REIMBBANK_CURR VARCHAR(3),
    ACCT_NUMBER VARCHAR(20),
    TIME_INDICATION_CODE VARCHAR(7),
    TIME_INDICATION VARCHAR(18),
    INST_CODE VARCHAR(124),
    TRANSTYPE_CODE VARCHAR(4),
    EXCHANGE_RATE DECIMAL(19,2),
    SENDIG_INST_CODE VARCHAR(11),
    SENDIG_INST VARCHAR(11),
    ORDERINGBANK_CODE VARCHAR(11),
    ORDERINGBANK_NAMEANDADDRESS VARCHAR(144),
    SENDERSCORRES_CODE VARCHAR(11),
    SENDERSCORRES_NAMEANDADDRESS VARCHAR(144),
    RCVCORRES_CODE VARCHAR(11),
    RCVCORRES_NAMEANDADDRESS VARCHAR(144),
    THIRDREIMB_CODE VARCHAR(11),
    THIRDREIMB_NAMEANDADDRESS VARCHAR(144),
    INTERMEDIARY_CODE VARCHAR(11),
    INTERMEDIARY_NAMEANDADDRESS VARCHAR(144),
    ACCTWITHBANK_CODE VARCHAR(37),
    ACCTWITHBANK_NAMEANDADDRESS VARCHAR(144),
    REM_INF_CODE VARCHAR(3),
    REM_INF VARCHAR(144),
    SENDERSCHARGE_CURR VARCHAR(3),
    SENDERSCHARGE_AMOUNT DECIMAL(19,2),
    RCVCHARGE_CURR VARCHAR(3),
    RCVCHARGE_AMOUNT DECIMAL(19,2),
    REGULATORY_REPORTIG_CODE VARCHAR(8),
    REGULATORY_REPORTIG VARCHAR(108),
    ENVELOPE_CONTENT_CODE VARCHAR(4),
    ENVELOPE_CONTENT CLOB(3000)
);
CREATE TABLE ATTACHMENT
(
    ID BIGINT PRIMARY KEY NOT NULL,
    FILENAME VARCHAR(200),
    NODEREFID VARCHAR(64),
    CREATEDDATE TIMESTAMP,
    ATTACHMENTTYPE VARCHAR(200),
    ATTACHMENTID VARCHAR(36)
);
CREATE TABLE CASATRANSACTIONLOG
(
    ID BIGINT PRIMARY KEY NOT NULL,
    TRANSACTION_TIME TIMESTAMP,
    SERVICETYPE VARCHAR(30),
    DOCUMENTTYPE VARCHAR(20),
    DOCUMENTCLASS VARCHAR(20),
    DOCUMENTSUBTYPE1 VARCHAR(10),
    DOCUMENTSUBTYPE2 VARCHAR(10),
    HOST_STATUS VARCHAR(4),
    ACCOUNT_NAME VARCHAR(40),
    CURRENCY VARCHAR(3),
    TRANSACTION_AMOUNT DECIMAL(19,2),
    DEBIT_ACCOUNT_NUMBER VARCHAR(20),
    CREDIT_ACCOUNT_NUMBER VARCHAR(20),
    TELLER_ID VARCHAR(10),
    SUPID VARCHAR(10)
);
CREATE TABLE CDTPAYMENTREQUEST
(
    IEDIEIRDNO VARCHAR(20) PRIMARY KEY NOT NULL,
    PCHC_RCV_DATE TIMESTAMP,
    AABREFCODE VARCHAR(20),
    CLIENT_NAME VARCHAR(100),
    AMOUNT DECIMAL(19,2),
    AMOUNTCOLLECTED DECIMAL(19,2),
    E2MAMOUNTCOLLECTED DECIMAL(19,2),
    REQ_TYPE VARCHAR(7),
    E2MSTATUS VARCHAR(15),
    STATUS VARCHAR(15),
    FINALDUTYAMT DECIMAL(19,2),
    FINALTAXAMT DECIMAL(19,2),
    FINALCHARGES DECIMAL(19,2),
    IPF DECIMAL(19,2),
    UPLOAD_DATE TIMESTAMP,
    ABANDONED_DATE TIMESTAMP,
    DATEPAID TIMESTAMP,
    HIS_UPLOAD_DATE TIMESTAMP,
    TX_REF VARCHAR(40),
    PAYMENT_REF VARCHAR(40),
    DOCNUMBER VARCHAR(30),
    EMAILED SMALLINT,
    DUTIESTAX_REMITDATE TIMESTAMP,
    IPF_REMITDATE TIMESTAMP
);
CREATE TABLE CHARGE
(
    CHARGEID VARCHAR(50) PRIMARY KEY NOT NULL,
    DESCRIPTION VARCHAR(100)
);
CREATE TABLE CORRESCHARGEACTUAL
(
    ID BIGINT PRIMARY KEY NOT NULL,
    TRADESERVICEID VARCHAR(36),
    DOCUMENTNUMBER VARCHAR(21),
    STATUS VARCHAR(10),
    AMOUNT DECIMAL(19,2),
    CURRENCY VARCHAR(3),
    SPECIALRATETHIRDTOUSD DECIMAL(19,4),
    SPECIALRATEUSDTOPHP DECIMAL(19,4),
    SPECIALRATETHIRDTOPHP DECIMAL(19,4),
    SPECIALRATEURR DECIMAL(19,4),
    PAIDDATE TIMESTAMP,
    CREATEDDATE TIMESTAMP
);
CREATE TABLE CORRESCHARGEADVANCE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    TRADESERVICEID VARCHAR(36),
    DOCUMENTNUMBER VARCHAR(21),
    SERVICETYPE VARCHAR(50),
    CORRESCHARGETYPE VARCHAR(20),
    STATUS VARCHAR(10),
    AMOUNT DECIMAL(19,2),
    CURRENCY VARCHAR(3),
    OUTSTANDINGBALANCE DECIMAL(19,2),
    SPECIALRATETHIRDTOUSD DECIMAL(19,4),
    SPECIALRATEUSDTOPHP DECIMAL(19,4),
    SPECIALRATETHIRDTOPHP DECIMAL(19,4),
    SPECIALRATEURR DECIMAL(19,4),
    REMITTEDDATE TIMESTAMP,
    CREATEDDATE TIMESTAMP
);
CREATE TABLE CUSTOMERACCOUNT
(
    ID BIGINT PRIMARY KEY NOT NULL,
    DATE_CREATED TIMESTAMP,
    ACCOUNT_NUMBER VARCHAR(50),
    CUSTOMER_NUMBER VARCHAR(50)
);
CREATE TABLE CUSTOMERLOG
(
    ID BIGINT PRIMARY KEY NOT NULL,
    CUSTOMERTYPE VARCHAR(10),
    FIRSTNAME VARCHAR(100),
    MIDDLENAME VARCHAR(100),
    LASTNAME VARCHAR(100),
    GENDER VARCHAR(10),
    DATEOFBIRTH TIMESTAMP,
    PLACEOFBIRTH VARCHAR(50),
    MARITALSTATUS VARCHAR(10),
    NATIONALITY VARCHAR(10),
    NATIONOFBIRTH VARCHAR(3),
    BUSINESSADDRESS1 VARCHAR(350),
    BUSINESSADDRESS2 VARCHAR(350),
    BUSINESSADDRESS3 VARCHAR(350),
    BUSINESSADDRESS4 VARCHAR(350),
    BUSINESSADDRESSZIPCODE VARCHAR(10),
    LENGTHOFSTAYINPRESENTADDRESS INT,
    PERMANENTADDRESS1 VARCHAR(350),
    PERMANENTADDRESS2 VARCHAR(350),
    PERMANENTADDRESS3 VARCHAR(350),
    PERMANENTADDRESS4 VARCHAR(350),
    PERMANENTADDRESSZIPCODE VARCHAR(10),
    LENGTHOFSTAYINPERMANENTADDRESS INT,
    OCCUPATION VARCHAR(50),
    NATUREOFBUSINESS VARCHAR(50),
    MONTHLYINCOME DECIMAL(19,2),
    ANNUALINCOME DECIMAL(19,2),
    FINANCIALSTATUS DECIMAL(19,2),
    INDIVIDUALORCORPORATE VARCHAR(1),
    RESIDENCEPHONENUMBER VARCHAR(15),
    OFFICEPHONENUMBER VARCHAR(15),
    MOBILENUMBER VARCHAR(15),
    NATUREOFWORK VARCHAR(10),
    NATUREOFSELFEMPLOYMENT VARCHAR(10),
    SOURCEOFFUNDS VARCHAR(100)
);
CREATE TABLE DAILYBALANCE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    DOCUMENTNUMBER VARCHAR(30),
    BALANCE BIGINT,
    BALANCEDATE TIMESTAMP
);
CREATE TABLE DAILYBALANCE_TEMP
(
    ID BIGINT PRIMARY KEY NOT NULL,
    DOCUMENTNUMBER VARCHAR(30),
    BALANCE DECIMAL(19,2),
    BALANCEDATE TIMESTAMP
);
CREATE TABLE DAILYFUNDING
(
    ID BIGINT PRIMARY KEY NOT NULL,
    TRADESERVICEID VARCHAR(36),
    BANK VARCHAR(11),
    BANKNAME VARCHAR(50),
    BANKTYPE VARCHAR(15),
    CURRENCY VARCHAR(3),
    AMOUNT DECIMAL(19,2),
    SETTLEDDATE TIMESTAMP
);

CREATE TABLE DIRECTREMITTANCE
(
    DOCUMENTNUMBER VARCHAR(21) PRIMARY KEY NOT NULL,
    TSNUMBER VARCHAR(12),
    DOCUMENTTYPE VARCHAR(10),
    REMITTINGBANK VARCHAR(11),
    REIMBURSINGBANK VARCHAR(11),
    PROCESSDATE TIMESTAMP,
    REMITTINGBANKREFERENCENUMBER VARCHAR(25),
    CURRENCY VARCHAR(3),
    AMOUNT DECIMAL(19,2),
    OUTSTANDINGAMOUNT DECIMAL(19,2),
    DATEOFBLAIRWAYBILL TIMESTAMP,
    MATURITYDATE TIMESTAMP,
    IMPORTERCIFNUMBER VARCHAR(10),
    ORIGINALPORT VARCHAR(65),
    IMPORTERCBCODE VARCHAR(15),
    IMPORTERNAME VARCHAR(50),
    IMPORTERADDRESS VARCHAR(160),
    SENDERTORECEIVERINFORMATION VARCHAR(100),
    BENEFICIARYNAME VARCHAR(50),
    BENEFICIARYADDRESS VARCHAR(160),
    LASTTRANSACTION VARCHAR(50),
    CANCELLEDDATE TIMESTAMP,
    SETTLEDDATE TIMESTAMP,
    PROCESSINGUNITCODE VARCHAR(10)
);
CREATE TABLE DOCUMENTAGAINSTACCEPTANCE
(
    DOCUMENTNUMBER VARCHAR(21) PRIMARY KEY NOT NULL,
    TSNUMBER VARCHAR(12),
    DOCUMENTTYPE VARCHAR(10),
    REMITTINGBANK VARCHAR(11),
    REIMBURSINGBANK VARCHAR(11),
    PROCESSDATE TIMESTAMP,
    REMITTINGBANKREFERENCENUMBER VARCHAR(25),
    CURRENCY VARCHAR(3),
    AMOUNT DECIMAL(19,2),
    OUTSTANDINGAMOUNT DECIMAL(19,2),
    DATEOFBLAIRWAYBILL TIMESTAMP,
    MATURITYDATE TIMESTAMP,
    IMPORTERCIFNUMBER VARCHAR(10),
    ORIGINALPORT VARCHAR(65),
    IMPORTERCBCODE VARCHAR(15),
    IMPORTERNAME VARCHAR(50),
    IMPORTERADDRESS VARCHAR(160),
    SENDERTORECEIVERINFORMATION VARCHAR(100),
    BENEFICIARYNAME VARCHAR(50),
    BENEFICIARYADDRESS VARCHAR(160),
    LASTTRANSACTION VARCHAR(50),
    CANCELLEDDATE TIMESTAMP,
    SETTLEDDATE TIMESTAMP,
    PROCESSINGUNITCODE VARCHAR(10)
);
CREATE TABLE DOCUMENTAGAINSTPAYMENT
(
    DOCUMENTNUMBER VARCHAR(21) PRIMARY KEY NOT NULL,
    TSNUMBER VARCHAR(12),
    DOCUMENTTYPE VARCHAR(10),
    REMITTINGBANK VARCHAR(11),
    REIMBURSINGBANK VARCHAR(11),
    PROCESSDATE TIMESTAMP,
    REMITTINGBANKREFERENCENUMBER VARCHAR(25),
    CURRENCY VARCHAR(3),
    AMOUNT DECIMAL(19,2),
    OUTSTANDINGAMOUNT DECIMAL(19,2),
    DATEOFBLAIRWAYBILL TIMESTAMP,
    MATURITYDATE TIMESTAMP,
    IMPORTERCIFNUMBER VARCHAR(10),
    ORIGINALPORT VARCHAR(65),
    IMPORTERCBCODE VARCHAR(15),
    IMPORTERNAME VARCHAR(50),
    IMPORTERADDRESS VARCHAR(160),
    SENDERTORECEIVERINFORMATION VARCHAR(100),
    BENEFICIARYNAME VARCHAR(50),
    BENEFICIARYADDRESS VARCHAR(160),
    LASTTRANSACTION VARCHAR(50),
    CANCELLEDDATE TIMESTAMP,
    SETTLEDDATE TIMESTAMP,
    PROCESSINGUNITCODE VARCHAR(10)
);
CREATE TABLE DOC_NUM_SEQUENCE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    DOCUMENT_TYPE VARCHAR(5),
    SEQUENCE INT,
    UNIT_CODE VARCHAR(5),
    SEQUENCE_YEAR INT
);
CREATE TABLE DW_REFERENCE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    FIELD VARCHAR(20),
    PRODUCTID VARCHAR(20),
    DESCRIPTION VARCHAR(30)
);
CREATE TABLE EXPORTADVISING
(
    DOCUMENTNUMBER VARCHAR(21) PRIMARY KEY NOT NULL,
    ADVISINGBANKTYPE VARCHAR(6),
    PROCESSDATE TIMESTAMP,
    EXPORTERCBCODE VARCHAR(10),
    EXPORTERNAME VARCHAR(50),
    EXPORTERADDRESS VARCHAR(160),
    IMPORTERNAME VARCHAR(50),
    LCTYPE VARCHAR(10),
    LCNUMBER VARCHAR(21),
    LCISSUEDATE TIMESTAMP,
    LCTENOR VARCHAR(8),
    USANCETERM BIGINT,
    LCCURRENCY VARCHAR(3),
    LCAMOUNT DECIMAL(19,2),
    EXPIRYDATE TIMESTAMP,
    CONFIRMEDFLAG SMALLINT,
    ISSUINGBANK VARCHAR(21),
    REIMBURSINGBANK VARCHAR(21),
    RECEIVINGBANK VARCHAR(21),
    ADVISINGBANK VARCHAR(21),
    TOTALBANKCHARGES DECIMAL(19,2),
    AMENDMENTCOUNT INT,
    LASTAMENDMENTDATE TIMESTAMP,
    SENDERTORECEIVERINFORMATION VARCHAR(100),
    WITHMT730 SMALLINT,
    WITHMT799 SMALLINT,
    NARRATIVE VARCHAR(105),
    RELATEDREFERENCE VARCHAR(21),
    CANCELLATIONDATE TIMESTAMP,
    LASTTRANSACTION VARCHAR(12),
    CWTFLAG SMALLINT
);
CREATE TABLE GLTS_SEQUENCE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    SEQUENCE INT
);
CREATE TABLE GL_CODES
(
    ID BIGINT PRIMARY KEY NOT NULL,
    PRODUCTID VARCHAR(255),
    SERVICETYPE VARCHAR(255),
    DOCUMENTTYPE VARCHAR(255),
    DOCUMENTCLASS VARCHAR(255),
    DOCUMENTSUBTYPE1 VARCHAR(255),
    DOCUMENTSUBTYPE2 VARCHAR(255),
    PRODUCT_CODE VARCHAR(255),
    BOOK_CODE VARCHAR(255),
    CREDIT_CODE VARCHAR(255),
    DEBIT_CODE VARCHAR(255)
);
CREATE TABLE GL_ENTRY_TYPES
(
    ID BIGINT PRIMARY KEY NOT NULL,
    RECORDTYPE VARCHAR(255),
    GLCODE VARCHAR(255),
    DESCRIPTION VARCHAR(255)
);
CREATE TABLE IC_NUM_SEQUENCE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    DOCUMENT_TYPE VARCHAR(5),
    SEQUENCE INT,
    UNIT_CODE VARCHAR(5),
    SEQUENCE_YEAR INT
);
CREATE TABLE INDEMNITY
(
    INDEMNITYNUMBER VARCHAR(21) PRIMARY KEY NOT NULL,
    INDEMNITYTYPE VARCHAR(2),
    REFERENCENUMBER VARCHAR(22),
    TRANSPORTMEDIUM VARCHAR(3),
    SHIPMENTSEQUENCENUMBER INT,
    SHIPMENTCURRENCY VARCHAR(3),
    SHIPMENTAMOUNT DECIMAL(19,2),
    INDEMNITYISSUEDATE TIMESTAMP,
    CWTFLAG SMALLINT,
    BLAIRWAYBILLNUMBER VARCHAR(30),
    PROCESSDATE TIMESTAMP,
    BLPRESENTED VARCHAR(10),
    FACILITYID VARCHAR(10),
    CANCELLATIONDATE TIMESTAMP,
    DOCUMENTRELEASEDATE TIMESTAMP
);
CREATE TABLE INDEMNITY_NUM_SEQUENCE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    DOCUMENT_TYPE VARCHAR(5),
    SEQUENCE INT,
    UNIT_CODE VARCHAR(5),
    SEQUENCE_YEAR INT
);
CREATE TABLE INSTRUCTIONTOBANK
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    INSTRUCTIONTOBANKCODE VARCHAR(10),
    INSTRUCTION CLOB(6500),
    TRADESERVICEID VARCHAR(36)
);
CREATE TABLE INT_ACCENTRYACTUAL
(
    ID BIGINT PRIMARY KEY NOT NULL,
    SEQUENCENUMBER BIGINT,
    UNITCODE VARCHAR(20),
    RESPONDINGUNITCODE VARCHAR(20),
    BOOKCODE VARCHAR(20),
    BOOKCURRENCY VARCHAR(20),
    ORIGINALCURRENCY VARCHAR(20),
    ENTRYTYPE VARCHAR(20),
    ACCOUNTINGCODE VARCHAR(100),
    PARTICULARS VARCHAR(100),
    GLTSNUMBER VARCHAR(6),
    ORIGINALAMOUNT DECIMAL(19,2),
    PESOAMOUNT DECIMAL(19,2),
    SOURCEBRANCH VARCHAR(255),
    TRADESERVICEID VARCHAR(36),
    PRODUCTID VARCHAR(50),
    SERVICETYPE VARCHAR(255),
    ACCEVTRANID VARCHAR(100),
    EFFECTIVEDATE TIMESTAMP,
    STATUS VARCHAR(15),
    ACCTYPE VARCHAR(1),
    CONTINGENTFLAG VARCHAR(8),
    UCPBPRODUCTID VARCHAR(7)
);
CREATE TABLE JOB_HISTORY
(
    ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
    JOB_NAME VARCHAR(255),
    TRIGGER_NAME VARCHAR(255),
    GROUP_NAME VARCHAR(255),
    START_TIME TIMESTAMP,
    END_TIME TIMESTAMP,
    PREVIOUS_FIRE_TIME TIMESTAMP,
    NEXT_FIRE_TIME TIMESTAMP,
    STATUS VARCHAR(20),
    MESSAGE CLOB(4000)
);
CREATE TABLE LCADDITIONALCONDITION
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    CONDITIONCODE VARCHAR(10),
    CONDITION CLOB(3000),
    CONDITIONTYPE VARCHAR(7),
    DOCUMENTNUMBER VARCHAR(21)
);
CREATE TABLE LCADDITIONALCONDITION_AUDIT
(
    ID VARCHAR(36) NOT NULL,
    REV_ID INT NOT NULL,
    REV_TYPE SMALLINT,
    CONDITIONCODE VARCHAR(10),
    CONDITION CLOB(3000),
    CONDITIONTYPE VARCHAR(7),
    PRIMARY KEY ( ID, REV_ID )
);
CREATE TABLE LCINSTRUCTIONTOBANK
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    INSTRUCTIONTOBANKCODE VARCHAR(10),
    INSTRUCTION CLOB(6500),
    DOCUMENTNUMBER VARCHAR(21)
);
CREATE TABLE LCINSTRUCTIONTOBANK_AUDIT
(
    ID VARCHAR(36) NOT NULL,
    REV_ID INT NOT NULL,
    REV_TYPE SMALLINT,
    INSTRUCTIONTOBANKCODE VARCHAR(10),
    INSTRUCTION CLOB(6500),
    PRIMARY KEY ( ID, REV_ID )
);
CREATE TABLE LCNEGOTIATION
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    DOCUMENTNUMBER VARCHAR(21),
    NEGOTIATIONNUMBER VARCHAR(36),
    LCNEGOTIATIONSTATUS VARCHAR(10),
    ICNUMBER VARCHAR(21),
    NEGOTIATIONAMOUNT DECIMAL(19,2),
    NEGOTIATIONCURRENCY VARCHAR(3),
    VALUEDATE TIMESTAMP,
    PROCESSDATE TIMESTAMP,
    NEGOTIATIONVALUEDATE TIMESTAMP,
    SENDERSCORRESPONDENTLOCATION VARCHAR(160),
    ACCOUNTWITHINSTITUTIONLOCATION VARCHAR(160),
    SENDERSCORRESPONDENTNAMEANDADDRESS VARCHAR(200),
    INSTRUCTIONACTION VARCHAR(100),
    ORIGINALAMOUNT DECIMAL(19,2),
    ORIGINALCURRENCY VARCHAR(3),
    BENEFICIARYSINSTITUTION VARCHAR(50),
    REIMBURSINGCURRENCY VARCHAR(3),
    SHIPMENTNUMBER VARCHAR(30),
    ACCOUNTWITHINSTITUTION VARCHAR(30),
    OUTSTANDINGBALANCE DECIMAL(19,2),
    RECEIVERSCORRESPONDENT VARCHAR(11),
    INTERMEDIARY VARCHAR(11),
    OVERDRAWNNEGOTIATIONAMOUNTINNEGOTIATIONCURRENCY DECIMAL(19,2),
    NEGOTIATIONAMOUNTINREIMBURSINGCURRENCY DECIMAL(19,2),
    OUTSTANDINGAMOUNT DECIMAL(19,2),
    ACCOUNTWITHINSTITUTIONNAMEANDADDRESS VARCHAR(200),
    CWTFLAG SMALLINT,
    BENEFICIARYSINSTITUTIONNAMEANDADDRESS VARCHAR(200),
    APCASHAMOUNTINNEGOTIATIONCURRENCY DECIMAL(19,2),
    REIMBURSINGBANK VARCHAR(11),
    NEGOTIATINGBANKSREFERENCENUMBER VARCHAR(30),
    AGRIAGRATAGGING VARCHAR(7),
    ORDERINGINSTITUTIONIDENTIFIERCODE VARCHAR(11),
    ORDERINGINSTITUTIONNAMEANDADDRESS VARCHAR(200),
    ORDERINGINSTITUTION VARCHAR(11),
    SENDERCORRESPONDENTIDENTIFIERCODE VARCHAR(11),
    RECEIVERSCORRESPONDENTNAMEANDADDRESS VARCHAR(200),
    TYPEOFLOAN VARCHAR(8),
    RECEIVERSCORRESPONDENTLOCATION VARCHAR(160),
    NEGOTIATIONFACILITYTYPE VARCHAR(4),
    DISCREPANCYFEECHARGE DECIMAL(19,2),
    RECEIVERSCORRESPONDENTIDENTIFIERCODE VARCHAR(11),
    GENERATEMT VARCHAR(5),
    SENDERTORECEIVERINFORMATION VARCHAR(200),
    BOOKINGCURRENCY VARCHAR(3),
    INTERMEDIARYNAMEANDADDRESS VARCHAR(200),
    NEGOTIATIONFACILITYID VARCHAR(1),
    BENEFICIARYSINSTITUTIONIDENTIFIERCODE VARCHAR(11),
    SENDERSCORRESPONDENT VARCHAR(11),
    ACCOUNTWITHINSTITUTIONIDENTIFIERCODE VARCHAR(11),
    INTERMEDIARYIDENTIFIERCODE VARCHAR(11),
    FURTHERIDENTIFICATION VARCHAR(30),
    EXPIRYDATE TIMESTAMP,
    ISSUEDATE TIMESTAMP,
    OVERDRAWNAMOUNT DECIMAL(19,2),
    REIMBURSINGBANKSPECIALRATE VARCHAR(10),
    INTERESTRATE VARCHAR(10),
    LOANMATURITYDATE TIMESTAMP,
    NEGOTIATINGBANK VARCHAR(11),
    NEGOTIATIONTYPE VARCHAR(30),
    NETAMOUNT DECIMAL(19,2),
    CRAMFLAG SMALLINT,
    TOTALAMOUNT DECIMAL(19,2),
    TOTALAMOUNTCURRENCY VARCHAR(3),
    BANK VARCHAR(50),
    BENEFICIARYCUSTOMERNAME VARCHAR(50),
    BYORDER VARCHAR(50),
    ORDERINGCUSTOMERADDRESS VARCHAR(160),
    DETAILSOFCHARGES VARCHAR(220),
    BENEFICIARY VARCHAR(50),
    BANKOPERATIONCODE VARCHAR(50),
    BENEFICIARYCUSTOMERADDRESS VARCHAR(160),
    NAMEANDADDRESS VARCHAR(200),
    ORDERINGCUSTOMERNAME VARCHAR(50),
    BENEFICIARYSACCOUNTNUMBER VARCHAR(50),
    FUNDINGREFERENCENUMBER VARCHAR(50),
    SENDERREFERENCE VARCHAR(50),
    RECEIVINGBANK VARCHAR(30),
    SWIFT VARCHAR(30),
    REMITTANCEFEE DECIMAL(19,2),
    REMITTANCEFEECURRENCY VARCHAR(3),
    PNNUMBER VARCHAR(20)
);
CREATE TABLE LCNEGOTIATIONDISCREPANCY
(
    ICNUMBER VARCHAR(21) PRIMARY KEY NOT NULL,
    DOCUMENTNUMBER VARCHAR(21),
    LCNEGOTIATIONDISCREPANCYSTATUS VARCHAR(6),
    NEGOTIATIONAMOUNT DECIMAL(19,2),
    NEGOTIATIONCURRENCY VARCHAR(3),
    NEGOTIATIONBANK VARCHAR(11),
    NEGOTIATIONBANKREFNUMBER VARCHAR(30),
    SENDERTORECEIVERINFORMATION VARCHAR(200),
    EXPIREDLC SMALLINT,
    OVERDRAWNFOR SMALLINT,
    OVERDRAWNAMOUNT DECIMAL(19,2),
    DESCRIPTIONOFGOODSNOTPERLC SMALLINT,
    DOCUMENTSNOTPRESENTED SMALLINT,
    OTHERS SMALLINT,
    OTHERSNARRATIVE CLOB(1000),
    LASMTODIFIEDDATE TIMESTAMP
);
CREATE TABLE LCNEGOTIATIONDISCREPANCY_AUDIT
(
    ICNUMBER VARCHAR(21) NOT NULL,
    REV_ID INT NOT NULL,
    REV_TYPE SMALLINT,
    DOCUMENTNUMBER VARCHAR(21),
    LCNEGOTIATIONDISCREPANCYSTATUS VARCHAR(6),
    NEGOTIATIONAMOUNT DECIMAL(19,2),
    NEGOTIATIONCURRENCY VARCHAR(3),
    NEGOTIATIONBANK VARCHAR(11),
    NEGOTIATIONBANKREFNUMBER VARCHAR(30),
    SENDERTORECEIVERINFORMATION VARCHAR(200),
    EXPIREDLC SMALLINT,
    OVERDRAWNFOR SMALLINT,
    OVERDRAWNAMOUNT DECIMAL(19,2),
    DESCRIPTIONOFGOODSNOTPERLC SMALLINT,
    DOCUMENTSNOTPRESENTED SMALLINT,
    OTHERS SMALLINT,
    OTHERSNARRATIVE CLOB(1000),
    LASMTODIFIEDDATE TIMESTAMP,
    PRIMARY KEY ( ICNUMBER, REV_ID )
);
CREATE TABLE LCNEGOTIATION_AUDIT
(
    ID VARCHAR(36) NOT NULL,
    REV_ID INT NOT NULL,
    REV_TYPE SMALLINT,
    DOCUMENTNUMBER VARCHAR(21),
    NEGOTIATIONNUMBER VARCHAR(36),
    LCNEGOTIATIONSTATUS VARCHAR(10),
    ICNUMBER VARCHAR(21),
    NEGOTIATIONAMOUNT DECIMAL(19,2),
    NEGOTIATIONCURRENCY VARCHAR(3),
    VALUEDATE TIMESTAMP,
    PROCESSDATE TIMESTAMP,
    NEGOTIATIONVALUEDATE TIMESTAMP,
    SENDERSCORRESPONDENTLOCATION VARCHAR(160),
    ACCOUNTWITHINSTITUTIONLOCATION VARCHAR(160),
    SENDERSCORRESPONDENTNAMEANDADDRESS VARCHAR(200),
    INSTRUCTIONACTION VARCHAR(100),
    ORIGINALAMOUNT DECIMAL(19,2),
    ORIGINALCURRENCY VARCHAR(3),
    BENEFICIARYSINSTITUTION VARCHAR(50),
    REIMBURSINGCURRENCY VARCHAR(3),
    SHIPMENTNUMBER VARCHAR(30),
    ACCOUNTWITHINSTITUTION VARCHAR(30),
    OUTSTANDINGBALANCE DECIMAL(19,2),
    RECEIVERSCORRESPONDENT VARCHAR(11),
    INTERMEDIARY VARCHAR(11),
    OVERDRAWNNEGOTIATIONAMOUNTINNEGOTIATIONCURRENCY DECIMAL(19,2),
    NEGOTIATIONAMOUNTINREIMBURSINGCURRENCY DECIMAL(19,2),
    OUTSTANDINGAMOUNT DECIMAL(19,2),
    ACCOUNTWITHINSTITUTIONNAMEANDADDRESS VARCHAR(200),
    CWTFLAG SMALLINT,
    BENEFICIARYSINSTITUTIONNAMEANDADDRESS VARCHAR(200),
    APCASHAMOUNTINNEGOTIATIONCURRENCY DECIMAL(19,2),
    REIMBURSINGBANK VARCHAR(11),
    NEGOTIATINGBANKSREFERENCENUMBER VARCHAR(30),
    AGRIAGRATAGGING VARCHAR(7),
    ORDERINGINSTITUTIONIDENTIFIERCODE VARCHAR(11),
    ORDERINGINSTITUTIONNAMEANDADDRESS VARCHAR(200),
    ORDERINGINSTITUTION VARCHAR(11),
    SENDERCORRESPONDENTIDENTIFIERCODE VARCHAR(11),
    RECEIVERSCORRESPONDENTNAMEANDADDRESS VARCHAR(200),
    TYPEOFLOAN VARCHAR(8),
    RECEIVERSCORRESPONDENTLOCATION VARCHAR(160),
    NEGOTIATIONFACILITYTYPE VARCHAR(4),
    DISCREPANCYFEECHARGE DECIMAL(19,2),
    RECEIVERSCORRESPONDENTIDENTIFIERCODE VARCHAR(11),
    GENERATEMT VARCHAR(5),
    SENDERTORECEIVERINFORMATION VARCHAR(200),
    BOOKINGCURRENCY VARCHAR(3),
    INTERMEDIARYNAMEANDADDRESS VARCHAR(200),
    NEGOTIATIONFACILITYID VARCHAR(1),
    BENEFICIARYSINSTITUTIONIDENTIFIERCODE VARCHAR(11),
    SENDERSCORRESPONDENT VARCHAR(11),
    ACCOUNTWITHINSTITUTIONIDENTIFIERCODE VARCHAR(11),
    INTERMEDIARYIDENTIFIERCODE VARCHAR(11),
    FURTHERIDENTIFICATION VARCHAR(30),
    EXPIRYDATE TIMESTAMP,
    ISSUEDATE TIMESTAMP,
    OVERDRAWNAMOUNT DECIMAL(19,2),
    REIMBURSINGBANKSPECIALRATE VARCHAR(10),
    INTERESTRATE VARCHAR(10),
    LOANMATURITYDATE TIMESTAMP,
    NEGOTIATINGBANK VARCHAR(11),
    NEGOTIATIONTYPE VARCHAR(30),
    NETAMOUNT DECIMAL(19,2),
    CRAMFLAG SMALLINT,
    TOTALAMOUNT DECIMAL(19,2),
    TOTALAMOUNTCURRENCY VARCHAR(3),
    BANK VARCHAR(50),
    BENEFICIARYCUSTOMERNAME VARCHAR(50),
    BYORDER VARCHAR(50),
    ORDERINGCUSTOMERADDRESS VARCHAR(160),
    DETAILSOFCHARGES VARCHAR(220),
    BENEFICIARY VARCHAR(50),
    BANKOPERATIONCODE VARCHAR(50),
    BENEFICIARYCUSTOMERADDRESS VARCHAR(160),
    NAMEANDADDRESS VARCHAR(200),
    ORDERINGCUSTOMERNAME VARCHAR(50),
    BENEFICIARYSACCOUNTNUMBER VARCHAR(50),
    FUNDINGREFERENCENUMBER VARCHAR(50),
    SENDERREFERENCE VARCHAR(50),
    RECEIVINGBANK VARCHAR(30),
    SWIFT VARCHAR(30),
    REMITTANCEFEE DECIMAL(19,2),
    REMITTANCEFEECURRENCY VARCHAR(3),
    PNNUMBER VARCHAR(20),
    PRIMARY KEY ( ID, REV_ID )
);
CREATE TABLE LCREQUIREDDOCUMENT
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    DOCUMENTCODE VARCHAR(10),
    DESCRIPTION CLOB(6500),
    REQUIREDDOCUMENTTYPE VARCHAR(10),
    DOCUMENTNUMBER VARCHAR(21)
);
CREATE TABLE LCREQUIREDDOCUMENT_AUDIT
(
    ID VARCHAR(36) NOT NULL,
    REV_ID INT NOT NULL,
    REV_TYPE SMALLINT,
    DOCUMENTCODE VARCHAR(10),
    DESCRIPTION CLOB(6500),
    REQUIREDDOCUMENTTYPE VARCHAR(10),
    PRIMARY KEY ( ID, REV_ID )
);
CREATE TABLE LETTEROFCREDIT
(
    DOCUMENTNUMBER VARCHAR(21) PRIMARY KEY NOT NULL,
    DOCUMENTTYPE VARCHAR(10),
    PURPOSE VARCHAR(80),
    PROCESSDATE TIMESTAMP,
    EXPIRYDATE TIMESTAMP,
    REASONFORCANCELLATION VARCHAR(80),
    CANCELLATIONDATE TIMESTAMP,
    TENOR VARCHAR(8),
    TYPE VARCHAR(10),
    PAYMENTMODE VARCHAR(12),
    USANCEPERIOD BIGINT,
    USANCEPERIODSTART VARCHAR(100),
    EXPIRYCOUNTRYCODE VARCHAR(3),
    PARTIALSHIPMENT VARCHAR(15),
    PARTIALDELIVERY VARCHAR(15),
    TRANSSHIPMENT VARCHAR(15),
    IRREVOCABLE SMALLINT,
    NEGOTIATIONRESTRICTION SMALLINT,
    LASTNEGOTIATIONDATE TIMESTAMP,
    ADVISETHROUGHBANK SMALLINT,
    PRICETERM VARCHAR(3),
    REVOLVINGAMOUNT DECIMAL(19,2),
    REVOLVINGPERIOD VARCHAR(10),
    DAYSREVOLVING INT,
    CUMULATIVE SMALLINT,
    AGGREGATEAMOUNT DECIMAL(19,2),
    CASHFLAG SMALLINT,
    TOTALNEGOTIATEDAMOUNT DECIMAL(19,2),
    CASHAMOUNT DECIMAL(19,2),
    TOTALNEGOTIATEDCASHAMOUNT DECIMAL(19,2),
    OUTSTANDINGBALANCE DECIMAL(19,2),
    REFUNDAMOUNT DECIMAL(19,2),
    PORTOFORIGINATION VARCHAR(65),
    PORTOFDESTINATION VARCHAR(65),
    PORTOFORIGINCOUNTRYCODE VARCHAR(3),
    IMPORTERADDRESS VARCHAR(160),
    BENEFICIARYADDRESS VARCHAR(160),
    BENEFICIARYNAME VARCHAR(50),
    ADVISINGBANKCODE VARCHAR(11),
    CONFIRMINGBANKCODE VARCHAR(11),
    REIMBURSINGCURRENCY VARCHAR(3),
    DRAWEE VARCHAR(105),
    ADVISEMEDIUM VARCHAR(6),
    LATESTSHIPMENTDATE TIMESTAMP,
    DISPATCHPLACE VARCHAR(65),
    FINALDESTINATIONPLACE VARCHAR(65),
    APPLICABLERULES VARCHAR(30),
    FORMOFDOCUMENTARYCREDIT VARCHAR(30),
    DESTINATIONBANK VARCHAR(11),
    ISSUEDATE TIMESTAMP,
    PRICETERMNARRATIVE CLOB(3000),
    CONFIRMATIONINSTRUCTIONSFLAG VARCHAR(15),
    MARINEINSURANCE VARCHAR(8),
    GENERALDESCRIPTIONOFGOODS CLOB(6500),
    CWTFLAG SMALLINT,
    ADVANCECORRESCHARGESFLAG SMALLINT,
    OTHERPRICETERM VARCHAR(100),
    ADVISETHROUGHBANKIDENTIFIERCODE VARCHAR(11),
    TENOROFDRAFTNARRATIVE VARCHAR(105),
    MAXIMUMCREDITAMOUNT VARCHAR(20),
    SHIPMENTPERIOD VARCHAR(65),
    AVAILABLEWITHFLAG VARCHAR(30),
    ADVISETHROUGHBANKLOCATION VARCHAR(160),
    PERIODFORPRESENTATION VARCHAR(140),
    PERIODFORPRESENTATIONADVISETHROUGHBANK VARCHAR(140),
    MIXEDPAYMENTDETAILS VARCHAR(140),
    IMPORTERNAME VARCHAR(50),
    PLACEOFFINALDESTINATION VARCHAR(65),
    EXPORTERNAME VARCHAR(50),
    PLACEOFTAKINGDISPATCHORRECEIPT VARCHAR(65),
    EXPORTERADDRESS VARCHAR(160),
    NEGATIVETOLERANCELIMIT DECIMAL(19,2),
    REIMBURSINGBANKFLAG VARCHAR(1),
    ADVISETHROUGHBANKNAMEANDADDRESS VARCHAR(200),
    IDENTIFIERCODE VARCHAR(11),
    AVAILABLEBY VARCHAR(20),
    REIMBURSINGBANKNAMEANDADDRESS VARCHAR(200),
    SENDERTORECEIVERINFORMATION VARCHAR(210),
    REIMBURSINGBANKIDENTIFIERCODE VARCHAR(11),
    NAMEANDADDRESS VARCHAR(200),
    REIMBURSINGACCOUNTTYPE VARCHAR(50),
    IMPORTERCBCODE VARCHAR(15),
    BSPCOUNTRYCODE VARCHAR(10),
    IMPORTERCIFNUMBER VARCHAR(10),
    DEFERREDPAYMENTDETAILS VARCHAR(100),
    REIMBURSINGBANKACCOUNTNUMBER VARCHAR(30),
    POSITIVETOLERANCELIMIT DECIMAL(19,2),
    LATESTDATESHIPMENT TIMESTAMP,
    AVAILABLEWITH VARCHAR(70),
    ADDITIONALAMOUNTSCOVERED VARCHAR(70),
    PORTOFDISCHARGEORDESTINATION VARCHAR(65),
    ADVISETHROUGHBANKFLAG VARCHAR(1),
    SENDERTORECEIVERINFORMATIONNARRATIVE VARCHAR(100),
    EXPORTERCBCODE VARCHAR(10),
    PORTOFLOADINGORDEPARTURE VARCHAR(65),
    STANDBYTAGGING VARCHAR(20),
    FURTHERIDENTIFICATION VARCHAR(50),
    PURPOSEOFSTANDBY VARCHAR(100),
    FORMATTYPE VARCHAR(20),
    DETAILSOFGUARANTEE CLOB(9800),
    APPLICANTNAME VARCHAR(50),
    APPLICANTADDRESS VARCHAR(160),
    PLACEOFRECEIPT VARCHAR(65),
    PLACEOFDELIVERY VARCHAR(65),
    OTHERDOCUMENTSINSTRUCTIONS CLOB(1000),
    SHIPMENTCOUNT INT,
    DATECLOSED TIMESTAMP,
    CURRENTAMOUNT DECIMAL(19,2),
    NUMBEROFAMENDMENTS INT,
    LASTAMENDMENTDATE TIMESTAMP,
    LASTREINSTATEMENTDATE TIMESTAMP,
    LASTTRANSACTION VARCHAR(50),
    LASTMODIFIEDDATE TIMESTAMP,
    NARRATIVE CLOB(700),
    RECEIVERSREFERENCE VARCHAR(16),
    SENDERSREFERENCE VARCHAR(16),
    EXPIRYPLACE VARCHAR(20)
);
CREATE TABLE LETTEROFCREDIT_AUDIT
(
    DOCUMENTNUMBER VARCHAR(21) NOT NULL,
    REV_ID INT NOT NULL,
    DOCUMENTTYPE VARCHAR(10),
    PURPOSE VARCHAR(80),
    PROCESSDATE TIMESTAMP,
    EXPIRYDATE TIMESTAMP,
    REASONFORCANCELLATION VARCHAR(80),
    CANCELLATIONDATE TIMESTAMP,
    TENOR VARCHAR(8),
    TYPE VARCHAR(10),
    PAYMENTMODE VARCHAR(12),
    USANCEPERIOD BIGINT,
    USANCEPERIODSTART VARCHAR(100),
    EXPIRYCOUNTRYCODE VARCHAR(3),
    PARTIALSHIPMENT VARCHAR(15),
    PARTIALDELIVERY VARCHAR(15),
    TRANSSHIPMENT VARCHAR(15),
    IRREVOCABLE SMALLINT,
    NEGOTIATIONRESTRICTION SMALLINT,
    LASTNEGOTIATIONDATE TIMESTAMP,
    ADVISETHROUGHBANK SMALLINT,
    PRICETERM VARCHAR(3),
    REVOLVINGAMOUNT DECIMAL(19,2),
    REVOLVINGPERIOD VARCHAR(10),
    DAYSREVOLVING INT,
    CUMULATIVE SMALLINT,
    AGGREGATEAMOUNT DECIMAL(19,2),
    CASHFLAG SMALLINT,
    TOTALNEGOTIATEDAMOUNT DECIMAL(19,2),
    CASHAMOUNT DECIMAL(19,2),
    TOTALNEGOTIATEDCASHAMOUNT DECIMAL(19,2),
    OUTSTANDINGBALANCE DECIMAL(19,2),
    REFUNDAMOUNT DECIMAL(19,2),
    PORTOFORIGINATION VARCHAR(65),
    PORTOFDESTINATION VARCHAR(65),
    PORTOFORIGINCOUNTRYCODE VARCHAR(3),
    IMPORTERADDRESS VARCHAR(160),
    BENEFICIARYADDRESS VARCHAR(160),
    BENEFICIARYNAME VARCHAR(50),
    ADVISINGBANKCODE VARCHAR(11),
    CONFIRMINGBANKCODE VARCHAR(11),
    REIMBURSINGCURRENCY VARCHAR(3),
    DRAWEE VARCHAR(105),
    ADVISEMEDIUM VARCHAR(6),
    LATESTSHIPMENTDATE TIMESTAMP,
    DISPATCHPLACE VARCHAR(65),
    FINALDESTINATIONPLACE VARCHAR(65),
    APPLICABLERULES VARCHAR(30),
    FORMOFDOCUMENTARYCREDIT VARCHAR(30),
    DESTINATIONBANK VARCHAR(11),
    ISSUEDATE TIMESTAMP,
    PRICETERMNARRATIVE CLOB(3000),
    CONFIRMATIONINSTRUCTIONSFLAG VARCHAR(15),
    MARINEINSURANCE VARCHAR(8),
    GENERALDESCRIPTIONOFGOODS CLOB(6500),
    CWTFLAG SMALLINT,
    ADVANCECORRESCHARGESFLAG SMALLINT,
    OTHERPRICETERM VARCHAR(100),
    ADVISETHROUGHBANKIDENTIFIERCODE VARCHAR(11),
    TENOROFDRAFTNARRATIVE VARCHAR(105),
    MAXIMUMCREDITAMOUNT VARCHAR(20),
    SHIPMENTPERIOD VARCHAR(65),
    AVAILABLEWITHFLAG VARCHAR(30),
    ADVISETHROUGHBANKLOCATION VARCHAR(160),
    PERIODFORPRESENTATION VARCHAR(140),
    PERIODFORPRESENTATIONADVISETHROUGHBANK VARCHAR(140),
    MIXEDPAYMENTDETAILS VARCHAR(140),
    IMPORTERNAME VARCHAR(50),
    PLACEOFFINALDESTINATION VARCHAR(65),
    EXPORTERNAME VARCHAR(50),
    PLACEOFTAKINGDISPATCHORRECEIPT VARCHAR(65),
    EXPORTERADDRESS VARCHAR(160),
    NEGATIVETOLERANCELIMIT DECIMAL(19,2),
    REIMBURSINGBANKFLAG VARCHAR(1),
    ADVISETHROUGHBANKNAMEANDADDRESS VARCHAR(200),
    IDENTIFIERCODE VARCHAR(11),
    AVAILABLEBY VARCHAR(20),
    REIMBURSINGBANKNAMEANDADDRESS VARCHAR(200),
    SENDERTORECEIVERINFORMATION VARCHAR(210),
    REIMBURSINGBANKIDENTIFIERCODE VARCHAR(11),
    NAMEANDADDRESS VARCHAR(200),
    REIMBURSINGACCOUNTTYPE VARCHAR(50),
    IMPORTERCBCODE VARCHAR(15),
    BSPCOUNTRYCODE VARCHAR(10),
    IMPORTERCIFNUMBER VARCHAR(10),
    DEFERREDPAYMENTDETAILS VARCHAR(100),
    REIMBURSINGBANKACCOUNTNUMBER VARCHAR(30),
    POSITIVETOLERANCELIMIT DECIMAL(19,2),
    LATESTDATESHIPMENT TIMESTAMP,
    AVAILABLEWITH VARCHAR(70),
    ADDITIONALAMOUNTSCOVERED VARCHAR(70),
    PORTOFDISCHARGEORDESTINATION VARCHAR(65),
    ADVISETHROUGHBANKFLAG VARCHAR(1),
    SENDERTORECEIVERINFORMATIONNARRATIVE VARCHAR(100),
    EXPORTERCBCODE VARCHAR(10),
    PORTOFLOADINGORDEPARTURE VARCHAR(65),
    STANDBYTAGGING VARCHAR(20),
    FURTHERIDENTIFICATION VARCHAR(50),
    PURPOSEOFSTANDBY VARCHAR(100),
    FORMATTYPE VARCHAR(20),
    DETAILSOFGUARANTEE CLOB(9800),
    APPLICANTNAME VARCHAR(50),
    APPLICANTADDRESS VARCHAR(160),
    PLACEOFRECEIPT VARCHAR(65),
    PLACEOFDELIVERY VARCHAR(65),
    OTHERDOCUMENTSINSTRUCTIONS CLOB(1000),
    SHIPMENTCOUNT INT,
    DATECLOSED TIMESTAMP,
    CURRENTAMOUNT DECIMAL(19,2),
    NUMBEROFAMENDMENTS INT,
    LASTAMENDMENTDATE TIMESTAMP,
    LASTREINSTATEMENTDATE TIMESTAMP,
    LASTTRANSACTION VARCHAR(50),
    LASTMODIFIEDDATE TIMESTAMP,
    NARRATIVE CLOB(700),
    RECEIVERSREFERENCE VARCHAR(16),
    SENDERSREFERENCE VARCHAR(16),
    EXPIRYPLACE VARCHAR(20),
    PRIMARY KEY ( DOCUMENTNUMBER, REV_ID )
);
CREATE TABLE LETTEROFCREDIT_LCADDITIONALCONDITION_AUDIT
(
    REV_ID INT NOT NULL,
    DOCUMENTNUMBER VARCHAR(21) NOT NULL,
    ID VARCHAR(36) NOT NULL,
    REV_TYPE SMALLINT,
    PRIMARY KEY ( REV_ID, DOCUMENTNUMBER, ID )
);
CREATE TABLE LETTEROFCREDIT_LCINSTRUCTIONTOBANK_AUDIT
(
    REV_ID INT NOT NULL,
    DOCUMENTNUMBER VARCHAR(21) NOT NULL,
    ID VARCHAR(36) NOT NULL,
    REV_TYPE SMALLINT,
    PRIMARY KEY ( REV_ID, DOCUMENTNUMBER, ID )
);
CREATE TABLE LETTEROFCREDIT_LCNEGOTIATIONDISCREPANCY_AUDIT
(
    REV_ID INT NOT NULL,
    DOCUMENTNUMBER VARCHAR(21) NOT NULL,
    ICNUMBER VARCHAR(21) NOT NULL,
    REV_TYPE SMALLINT,
    PRIMARY KEY ( REV_ID, DOCUMENTNUMBER, ICNUMBER )
);
CREATE TABLE LETTEROFCREDIT_LCNEGOTIATION_AUDIT
(
    REV_ID INT NOT NULL,
    DOCUMENTNUMBER VARCHAR(21) NOT NULL,
    ID VARCHAR(36) NOT NULL,
    REV_TYPE SMALLINT,
    PRIMARY KEY ( REV_ID, DOCUMENTNUMBER, ID )
);
CREATE TABLE LETTEROFCREDIT_LCREQUIREDDOCUMENT_AUDIT
(
    REV_ID INT NOT NULL,
    DOCUMENTNUMBER VARCHAR(21) NOT NULL,
    ID VARCHAR(36) NOT NULL,
    REV_TYPE SMALLINT,
    PRIMARY KEY ( REV_ID, DOCUMENTNUMBER, ID )
);
CREATE TABLE MARGINALDEPOSIT
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    SETTLEMENTACCOUNTNUMBER VARCHAR(30),
    SETTLEMENTACCOUNTTYPE VARCHAR(10),
    STATUS VARCHAR(8),
    CIFNUMBER VARCHAR(10),
    MODIFIEDDATE TIMESTAMP,
    MARGINALDEPOSITPNSUPPORT VARCHAR(3),
    MDOUTSTANDINGBALANCE DECIMAL(19,2),
    LONGNAME VARCHAR(150),
    ADDRESS1 VARCHAR(150),
    ADDRESS2 VARCHAR(150)
);
CREATE TABLE MARGINALDEPOSITACTIVITY
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    SETTLEMENTACCOUNTTYPE VARCHAR(10),
    ACTIVITYTYPE VARCHAR(6),
    REFERENCETYPE VARCHAR(40),
    REFERENCENUMBER VARCHAR(30),
    AMOUNT DECIMAL(19,2),
    CURRENCY VARCHAR(3),
    STATUS VARCHAR(8),
    MODIFIEDDATE TIMESTAMP,
    MARGINALDEPOSITID VARCHAR(36)
);
CREATE TABLE MTMESSAGE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    TRADESERVICEREFERENCENUMBER VARCHAR(20),
    DOCUMENTNUMBER VARCHAR(21),
    MTSTATUS VARCHAR(12),
    DATERECEIVED TIMESTAMP,
    MTTYPE VARCHAR(5),
    MESSAGE CLOB(10000),
    INSTRUCTION VARCHAR(200),
    USERACTIVEDIRECTORYID VARCHAR(20),
    MODIFIEDDATE TIMESTAMP,
    MTDIRECTION VARCHAR(10)
);
CREATE TABLE NON_LC_NUM_SEQUENCE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    DOCUMENT_TYPE VARCHAR(5),
    SEQUENCE INT,
    UNIT_CODE VARCHAR(5),
    SEQUENCE_YEAR INT
);
CREATE TABLE OPENACCOUNT
(
    DOCUMENTNUMBER VARCHAR(21) PRIMARY KEY NOT NULL,
    TSNUMBER VARCHAR(12),
    DOCUMENTTYPE VARCHAR(10),
    REMITTINGBANK VARCHAR(11),
    REIMBURSINGBANK VARCHAR(11),
    PROCESSDATE TIMESTAMP,
    REMITTINGBANKREFERENCENUMBER VARCHAR(25),
    CURRENCY VARCHAR(3),
    AMOUNT DECIMAL(19,2),
    OUTSTANDINGAMOUNT DECIMAL(19,2),
    DATEOFBLAIRWAYBILL TIMESTAMP,
    MATURITYDATE TIMESTAMP,
    IMPORTERCIFNUMBER VARCHAR(10),
    ORIGINALPORT VARCHAR(65),
    IMPORTERCBCODE VARCHAR(15),
    IMPORTERNAME VARCHAR(50),
    IMPORTERADDRESS VARCHAR(160),
    SENDERTORECEIVERINFORMATION VARCHAR(100),
    BENEFICIARYNAME VARCHAR(50),
    BENEFICIARYADDRESS VARCHAR(160),
    LASTTRANSACTION VARCHAR(50),
    CANCELLEDDATE TIMESTAMP,
    SETTLEDDATE TIMESTAMP,
    PROCESSINGUNITCODE VARCHAR(10)
);
CREATE TABLE OUTGOINGMT
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    DESTINATIONBANKCODE VARCHAR(11),
    MESSAGETYPE VARCHAR(5),
    STATUS VARCHAR(7),
    DETAILS CLOB(400000)
);
CREATE TABLE PAYMENT
(
    ID BIGINT PRIMARY KEY NOT NULL,
    TRADESERVICEID VARCHAR(36),
    CHARGETYPE VARCHAR(10),
    STATUS VARCHAR(20),
    PAIDDATE TIMESTAMP
);
CREATE TABLE PAYMENTDETAIL
(
    ID BIGINT PRIMARY KEY NOT NULL,
    PAYMENTINSTRUMENTTYPE VARCHAR(40),
    REFERENCENUMBER VARCHAR(36),
    AMOUNT DECIMAL(19,2),
    CURRENCY VARCHAR(3),
    STATUS VARCHAR(20),
    BOOKINGCURRENCY VARCHAR(3),
    INTERESTRATE INT,
    INTERESTTERM VARCHAR(10),
    INTERESTTERMCODE VARCHAR(1),
    REPRICINGTERM VARCHAR(10),
    REPRICINGTERMCODE VARCHAR(20),
    LOANTERM VARCHAR(10),
    LOANTERMCODE VARCHAR(20),
    LOANMATURITYDATE TIMESTAMP,
    PAYMENTTERM INT,
    REFERENCEID VARCHAR(36),
    PASSONRATETHIRDTOUSD DECIMAL(19,8),
    PASSONRATETHIRDTOPHP DECIMAL(19,8),
    PASSONRATEUSDTOPHP DECIMAL(19,8),
    SPECIALRATETHIRDTOUSD DECIMAL(19,8),
    SPECIALRATETHIRDTOPHP DECIMAL(19,8),
    SPECIALRATEUSDTOPHP DECIMAL(19,8),
    URR DECIMAL(19,8),
    PAIDDATE TIMESTAMP,
    PNNUMBER BIGINT,
    FACILITYID INT,
    FACILITYTYPE VARCHAR(5),
    FACILITYREFERENCENUMBER VARCHAR(20),
    PAYMENTCODE INT,
    SEQUENCENUMBER BIGINT,
    WITHCRAMAPPROVAL SMALLINT,
    PAYMENTID BIGINT
);
CREATE TABLE QRTZ_BLOB_TRIGGERS
(
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BLOB(1048576),
    PRIMARY KEY ( TRIGGER_NAME, TRIGGER_GROUP )
);
CREATE TABLE QRTZ_CALENDARS
(
    CALENDAR_NAME VARCHAR(200) PRIMARY KEY NOT NULL,
    CALENDAR BLOB(1048576) NOT NULL
);
CREATE TABLE QRTZ_CRON_TRIGGERS
(
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY ( TRIGGER_NAME, TRIGGER_GROUP )
);
CREATE TABLE QRTZ_FIRED_TRIGGERS
(
    ENTRY_ID VARCHAR(95) PRIMARY KEY NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    IS_VOLATILE VARCHAR(5) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INT NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200),
    JOB_GROUP VARCHAR(200),
    IS_STATEFUL VARCHAR(5),
    REQUESTS_RECOVERY VARCHAR(5)
);
CREATE TABLE QRTZ_JOB_DETAILS
(
    JOB_NAME VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250),
    JOB_CLASS_NAME VARCHAR(250) NOT NULL,
    IS_DURABLE VARCHAR(5) NOT NULL,
    IS_VOLATILE VARCHAR(5) NOT NULL,
    IS_STATEFUL VARCHAR(5) NOT NULL,
    REQUESTS_RECOVERY VARCHAR(5) NOT NULL,
    JOB_DATA BLOB(1048576),
    PRIMARY KEY ( JOB_NAME, JOB_GROUP )
);
CREATE TABLE QRTZ_JOB_LISTENERS
(
    JOB_NAME VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    JOB_LISTENER VARCHAR(200) NOT NULL,
    PRIMARY KEY ( JOB_NAME, JOB_GROUP, JOB_LISTENER )
);
CREATE TABLE QRTZ_LOCKS
(
    LOCK_NAME VARCHAR(40) PRIMARY KEY NOT NULL
);
CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS
(
    TRIGGER_GROUP VARCHAR(200) PRIMARY KEY NOT NULL
);
CREATE TABLE QRTZ_SCHEDULER_STATE
(
    INSTANCE_NAME VARCHAR(200) PRIMARY KEY NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL
);
CREATE TABLE QRTZ_SIMPLE_TRIGGERS
(
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY ( TRIGGER_NAME, TRIGGER_GROUP )
);
CREATE TABLE QRTZ_TRIGGERS
(
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    IS_VOLATILE VARCHAR(5) NOT NULL,
    DESCRIPTION VARCHAR(250),
    NEXT_FIRE_TIME BIGINT,
    PREV_FIRE_TIME BIGINT,
    PRIORITY INT,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT,
    CALENDAR_NAME VARCHAR(200),
    MISFIRE_INSTR SMALLINT,
    JOB_DATA BLOB(1048576),
    PRIMARY KEY ( TRIGGER_NAME, TRIGGER_GROUP )
);
CREATE TABLE QRTZ_TRIGGER_LISTENERS
(
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    TRIGGER_LISTENER VARCHAR(200) NOT NULL,
    PRIMARY KEY ( TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_LISTENER )
);
CREATE TABLE RBAC_AUTHORITY
(
    ID BIGINT PRIMARY KEY NOT NULL,
    AUTHORITYTYPEID VARCHAR(255),
    EFFECTIVEFROM DATE,
    EFFECTIVETO DATE,
    AUTHORIZATIONID BIGINT,
    AUTHORITYID INT
);
CREATE TABLE RBAC_AUTHORITYTYPE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    TYPE VARCHAR(255) NOT NULL,
    NAME VARCHAR(255),
    DESCRIPTION VARCHAR(255),
    ROLEID BIGINT,
    PERMISSIONID INT
);
CREATE TABLE RBAC_AUTHORIZATION
(
    ID BIGINT PRIMARY KEY NOT NULL,
    USERACTIVEDIRECTORYID VARCHAR(255)
);
CREATE TABLE RBAC_PERMISSION
(
    ID BIGINT PRIMARY KEY NOT NULL
);
CREATE TABLE RBAC_ROLE
(
    ID BIGINT PRIMARY KEY NOT NULL
);
CREATE TABLE RBAC_USER
(
    USERACTIVEDIRECTORYID VARCHAR(20) PRIMARY KEY NOT NULL,
    FIRSTNAME VARCHAR(40),
    LASTNAME VARCHAR(40),
    TELLERID VARCHAR(20)
);
CREATE TABLE REFACCDEFACCCODE
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    PRODUCTID VARCHAR(50),
    SERVICETYPE VARCHAR(255),
    ACCEVID VARCHAR(100),
    ACCEVTRANID VARCHAR(100),
    FORMULAVARIABLE VARCHAR(20),
    DEFAULTACCOUNTINGCODE VARCHAR(20)
);
CREATE TABLE REFACCENTRY
(
    ID BIGINT PRIMARY KEY NOT NULL,
    PRODUCTID VARCHAR(50),
    SERVICETYPE VARCHAR(255),
    ACCOUNTINGENTRYTYPE VARCHAR(255),
    ACCEVTRANID VARCHAR(100),
    UNITCODE VARCHAR(20),
    RESPONDINGUNITCODE VARCHAR(20),
    BOOKCODE VARCHAR(255),
    BOOKCURRENCY VARCHAR(255),
    LCCURRENCY VARCHAR(255),
    SETTLEMENTCURRENCY VARCHAR(255),
    ENTRYTYPE VARCHAR(255),
    ACCOUNTINGCODE VARCHAR(100),
    FORMULAACCOUNTINGCODE CLOB(5000),
    FORMULAPARTICULARS CLOB(5000),
    FORMULAVALUE CLOB(5000),
    FORMULAPESOVALUE CLOB(5000)
);
CREATE TABLE REFACCEVENT
(
    ACCEVID VARCHAR(100) PRIMARY KEY NOT NULL,
    PRODUCTID VARCHAR(255),
    SERVICETYPE VARCHAR(255),
    ACCEVTRANID VARCHAR(100),
    CURRENCYSETTLEMENT VARCHAR(255),
    CURRENCYORIGINAL VARCHAR(255)
);
CREATE TABLE REFACCEVENTTRANS
(
    ACCEVTRANID VARCHAR(100) PRIMARY KEY NOT NULL,
    DESCRIPTION VARCHAR(255)
);
CREATE TABLE REFADDITIONALCONDITION
(
    ID BIGINT PRIMARY KEY NOT NULL,
    CONDITIONTYPE VARCHAR(7),
    CONDITIONCODE VARCHAR(10),
    CONDITION VARCHAR(1000)
);
CREATE TABLE REFDOCUMENTFORMAT
(
    ID BIGINT PRIMARY KEY NOT NULL,
    FORMATCODE VARCHAR(13),
    FORMATDESCRIPTION CLOB(10000)
);
CREATE TABLE REFINSTRUCTIONTOBANK
(
    ID BIGINT PRIMARY KEY NOT NULL,
    INSTRUCTIONTOBANKCODE VARCHAR(10),
    INSTRUCTION VARCHAR(1000)
);
CREATE TABLE REFPAS5CLIENT
(
    AABREFCODE VARCHAR(20) PRIMARY KEY NOT NULL,
    CCN VARCHAR(13),
    TIN VARCHAR(14),
    CLIENT VARCHAR(100),
    CONTACTPERSON VARCHAR(100),
    PHONENO VARCHAR(60),
    EMAIL VARCHAR(130),
    BANKCHARGEDEFAULT DECIMAL(19,2),
    REGISTRATION_DATE TIMESTAMP,
    CIFNO VARCHAR(8),
    CIFNAME VARCHAR(100),
    ACCOUNTOFFICER VARCHAR(100),
    BRANCHUNITCODE VARCHAR(10),
    FEESHARING SMALLINT,
    DEFAULTACCOUNT VARCHAR(60),
    AUTODEBITAUTHORITY VARCHAR(14),
    SPECIALINSTRUCTION VARCHAR(200)
);
CREATE TABLE REFPRODUCT
(
    PRODUCTID VARCHAR(50) PRIMARY KEY NOT NULL,
    UCPBPRODUCTID VARCHAR(7),
    DOCUMENTTYPE VARCHAR(20),
    DOCUMENTCLASS VARCHAR(20),
    DOCUMENTSUBTYPE1 VARCHAR(15),
    DOCUMENTSUBTYPE2 VARCHAR(15),
    NAME VARCHAR(30),
    CONTINGENTACCOUNTINGCODE VARCHAR(50),
    CONTRACONTINGENTACCOUNTINGCODE VARCHAR(50),
    BOOKCODE VARCHAR(2)
);
CREATE TABLE REFPRODUCTSERVICE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    PRODUCTID VARCHAR(50),
    SERVICETYPE VARCHAR(30),
    FINANCIAL SMALLINT,
    REQBRANCHAPPROVAL INT,
    POSTAPPROVALREQUIREMENT VARCHAR(30)
);
CREATE TABLE REFPRODUCTSERVICEACEVTRID
(
    ID BIGINT PRIMARY KEY NOT NULL,
    PRODUCTID VARCHAR(50),
    SERVICETYPE VARCHAR(30),
    ACCOUNTINGEVENTTRANSACTIONID VARCHAR(100)
);
CREATE TABLE REFREQUIREDDOCUMENTS
(
    ID BIGINT PRIMARY KEY NOT NULL,
    DOCUMENTCODE VARCHAR(21),
    DESCRIPTION VARCHAR(1000),
    DOCUMENTTYPE VARCHAR(15)
);
CREATE TABLE REFROUTES
(
    ID BIGINT PRIMARY KEY NOT NULL,
    PRODUCTID VARCHAR(255),
    SERVICETYPE VARCHAR(40),
    GRP VARCHAR(6),
    ROUTE VARCHAR(1000)
);
CREATE TABLE REFSWIFTCHARGE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    CODE VARCHAR(10),
    DESCRIPTION VARCHAR(255)
);
CREATE TABLE REFTRADESERVICECHARGE
(
    ID BIGINT PRIMARY KEY NOT NULL,
    PRODUCTID VARCHAR(50),
    CHARGEID VARCHAR(30),
    SERVICETYPE VARCHAR(30),
    FORMULA CLOB(20000)
);
CREATE TABLE REFTRANSMITTALLETTER
(
    ID BIGINT PRIMARY KEY NOT NULL,
    TRANSMITTALLETTERCODE VARCHAR(10),
    LETTERDESCRIPTION CLOB(3000)
);
CREATE TABLE REF_BANK
(
    BIC_CODE VARCHAR(10) NOT NULL,
    BRANCH_CODE VARCHAR(3) NOT NULL,
    INSTITUTION_NAME VARCHAR(255),
    BRANCH_INFO VARCHAR(255),
    CITY VARCHAR(50),
    ADDRESS_1 VARCHAR(100),
    ADDRESS_2 VARCHAR(100),
    ADDRESS_3 VARCHAR(100),
    ADDRESS_4 VARCHAR(100),
    LOCATION VARCHAR(100),
    RMA_FLAG VARCHAR(1),
    DEPOSITORY_FLAG VARCHAR(1),
    GL_BANK_CD VARCHAR(20),
    RBU_ACCOUNT VARCHAR(35),
    FCDU_ACCOUNT VARCHAR(35),
    REIMBURSING_CURR VARCHAR(3),
    UPDATEDATE TIMESTAMP,
    UPDATEDBY VARCHAR(20),
    GL_CODE_RBU VARCHAR(12),
    GL_CODE_FCDU VARCHAR(12),
    PRIMARY KEY ( BIC_CODE, BRANCH_CODE )
);
CREATE TABLE REF_CORRESPONDENT_BANK
(
    ID BIGINT PRIMARY KEY NOT NULL,
    BANKCODE VARCHAR(13),
    CURRENCY VARCHAR(3),
    BANKNAME VARCHAR(50),
    CBCREDITORCODE VARCHAR(12),
    GLBANKCODE VARCHAR(8),
    DEPOSITORYFLAG VARCHAR(1),
    SWIFTFLAG VARCHAR(1),
    SWIFTBANKCODE VARCHAR(13),
    BANKGROUPCODE VARCHAR(3),
    SWIFTBRANCHCODE VARCHAR(4),
    RBUACCOUNT VARCHAR(35),
    ACCOUNTTYPE INT,
    COUNTRYCODE INT,
    RISKINDICATOR INT,
    COUNTERPARTYTYPE INT,
    RESELIGIBILITY INT,
    CREDITORCODE INT
);
CREATE TABLE REF_TFCIFNOS
(
    CIF_NO VARCHAR(7) NOT NULL,
    CB_CD DECIMAL(10,0),
    CL_NO DECIMAL(10,0),
    UCPB_CIFNO VARCHAR(10),
    CIF_FLAG VARCHAR(1)
);
CREATE TABLE REF_TFCLNT
(
    CL_NO DECIMAL(10,0) NOT NULL,
    CL_SH_NAME VARCHAR(20),
    CL_LO_NAME VARCHAR(60),
    CL_ADDR_1 VARCHAR(25),
    CL_ADDR_2 VARCHAR(25),
    UNIT_CD CHAR(4),
    DIV_CODE DECIMAL(5,0),
    AO_CD DECIMAL(10,0),
    CB_CD DECIMAL(10,0),
    IND_CODE DECIMAL(5,0),
    ECO_ACT_CD DECIMAL(5,0),
    CL_TAN CHAR(15),
    DOSRI_CODE CHAR(6),
    CIF_NO VARCHAR(7)
);
CREATE TABLE REF_TFCNTRY
(
    CNTRY_CD VARCHAR(3) NOT NULL,
    CNTRY_NAME VARCHAR(25) NOT NULL,
    CNTRY_ISO VARCHAR(2)
);
CREATE TABLE REF_TFCORRO
(
    FX_BANK_CD VARCHAR(13),
    CURR_CD VARCHAR(3),
    FX_BANK_NAME VARCHAR(50),
    GL_BANK_CD VARCHAR(20),
    DEPO_FLAG VARCHAR(1),
    SWIFT_BANK_CD VARCHAR(13),
    BANK_GRP_CD VARCHAR(3),
    SWIFT_BRNCH_CD VARCHAR(4),
    RBU_ACC VARCHAR(35),
    FCDU_ACC VARCHAR(35),
    CNTRY_CD VARCHAR(3)
);
CREATE TABLE REF_TFCUSTMR
(
    ID BIGINT PRIMARY KEY NOT NULL,
    CUST_TYPE VARCHAR(3),
    CB_CD VARCHAR(10),
    CL_SH_NAME VARCHAR(20),
    CL_ADDR_1 VARCHAR(25),
    CL_ADDR_2 VARCHAR(25),
    CL_ADDR_3 VARCHAR(25),
    CL_ADDR_4 VARCHAR(25),
    CL_ZIP_CD VARCHAR(10),
    HM_ADDR_1 VARCHAR(25),
    HM_ADDR_2 VARCHAR(25),
    HM_ADDR_3 VARCHAR(25),
    HM_ADDR_4 VARCHAR(25),
    HM_ZIP_CD VARCHAR(10),
    RES_NO VARCHAR(15),
    OFC_NO VARCHAR(15),
    MOBILE_NO VARCHAR(15),
    OCCUPATION VARCHAR(50),
    NTR_BUSINESS VARCHAR(50),
    NTR_WORK VARCHAR(10),
    NTR_SLF_EMPLYMNT VARCHAR(10),
    FUND_SRC VARCHAR(100),
    ANNUAL_INCOME DECIMAL(15,2),
    MONTHLY_INCOME DECIMAL(15,2),
    FIN_STATUS DECIMAL(15,2),
    ACCT_TYP DECIMAL(1,0),
    ACCT_OFF_CD DECIMAL(10,0),
    MTD_EXP_AMT DECIMAL(15,2),
    YTD_EXP_AMT DECIMAL(15,2),
    EXPADV_BAL DECIMAL(15,2),
    REDCLS_ADV_BAL DECIMAL(15,2),
    EVAT_FLAG VARCHAR(1),
    RES_CLASS VARCHAR(1),
    CL_LO_NAME VARCHAR(60),
    CL_TYP DECIMAL(1,0),
    CL_BDAY TIMESTAMP,
    CL_NO DECIMAL(10,0),
    CL_TAN VARCHAR(15),
    CBS_CIF_NO VARCHAR(7),
    UCPB_CIF_NO VARCHAR(10),
    CIF_SH_NAME VARCHAR(20),
    CIF_LO_NAME VARCHAR(40),
    CIF_LO_NAMEA VARCHAR(40),
    CIF_LO_NAMEB VARCHAR(40),
    GENDER VARCHAR(1),
    PLACE_OF_BIRTH VARCHAR(50),
    MARITAL_STATUS VARCHAR(1),
    NATIONALITY VARCHAR(4),
    NATION_OF_BIRTH VARCHAR(3)
);
CREATE TABLE REF_TFUNTMAP
(
    DIV_CD DECIMAL(9,0) NOT NULL,
    UNIT_CD DECIMAL(9,0) NOT NULL,
    SL_DIV_CD DECIMAL(9,0) NOT NULL,
    SL_UNIT_CD DECIMAL(9,0) NOT NULL,
    UNIT_NAME VARCHAR(40) NOT NULL,
    SL_UNIT_NAME VARCHAR(40) NOT NULL
);
CREATE TABLE REMARKS
(
    ID BIGINT PRIMARY KEY NOT NULL,
    REMARK_ID VARCHAR(36),
    USER_ID VARCHAR(20),
    MESSAGE VARCHAR(500),
    DATE_CREATED TIMESTAMP
);
CREATE TABLE REQUIREDDOCUMENT
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    DOCUMENTCODE VARCHAR(10),
    DESCRIPTION CLOB(6500),
    REQUIREDDOCUMENTTYPE VARCHAR(7),
    TRADESERVICEID VARCHAR(36)
);
CREATE TABLE REVINFO
(
    REV INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    REVTSTMP BIGINT,
    PRIMARY KEY (REV)
);
CREATE TABLE ROUTES
(
    ID BIGINT PRIMARY KEY NOT NULL,
    SENDERACTIVEDIRECTORYID VARCHAR(20),
    RECEIVERACTIVEDIRECTORYID VARCHAR(20),
    DATESENT TIMESTAMP,
    STATUS VARCHAR(20),
    ROUTINGINFORMATIONID VARCHAR(255)
);
CREATE TABLE ROUTINGINFORMATION
(
    ROUTINGINFORMATIONID VARCHAR(255) PRIMARY KEY NOT NULL
);
CREATE TABLE SEC_EMPLOYEE
(
    ID VARCHAR(20) PRIMARY KEY NOT NULL,
    FIRSTNAME VARCHAR(50),
    LASTNAME VARCHAR(50),
    FULLNAME VARCHAR(100),
    UNITCODE VARCHAR(50),
    POST_AUTH SMALLINT,
    LIMIT DECIMAL(19,2),
    LEVEL INT
);
CREATE TABLE SEC_OBJECT
(
    CODE VARCHAR(30) PRIMARY KEY NOT NULL,
    DESCRIPTION VARCHAR(100)
);
CREATE TABLE SEC_PERMISSION
(
    PERMISSIONID VARCHAR(30) PRIMARY KEY NOT NULL,
    OPERATION VARCHAR(8),
    OBJECT_CODE VARCHAR(30)
);
CREATE TABLE SEC_ROLE
(
    ID VARCHAR(20) PRIMARY KEY NOT NULL,
    DESCRIPTION VARCHAR(100),
    ADGROUP VARCHAR(100)
);
CREATE TABLE SEC_ROLE_PERMISSIONS
(
    ROLEID VARCHAR(20) NOT NULL,
    PERMISSIONID VARCHAR(30) NOT NULL,
    PRIMARY KEY ( ROLEID, PERMISSIONID )
);
CREATE TABLE SEC_USER
(
    ID VARCHAR(20) PRIMARY KEY NOT NULL
);
CREATE TABLE SEC_USER_ROLES
(
    USERID VARCHAR(20) NOT NULL,
    ROLEID VARCHAR(20) NOT NULL,
    PRIMARY KEY ( USERID, ROLEID )
);
CREATE TABLE SERVICECHARGE
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    CHARGEID VARCHAR(20),
    AMOUNT DECIMAL(19,2),
    ORIGINALAMOUNT DECIMAL(19,2),
    DEFAULTAMOUNT DECIMAL(19,2),
    CURRENCY VARCHAR(3),
    ORIGINALCURRENCY VARCHAR(3),
    TRADESERVICEID VARCHAR(36)
);
CREATE TABLE SERVICEINSTRUCTION
(
    SERVICEINSTRUCTIONID VARCHAR(12) PRIMARY KEY NOT NULL,
    TYPE VARCHAR(10),
    STATUS VARCHAR(15),
    DETAILS CLOB(20000),
    APPROVERS VARCHAR(30),
    USERACTIVEDIRECTORYID VARCHAR(20),
    CREATEDBY VARCHAR(20),
    APPROVEDBY VARCHAR(20),
    DATEAPPROVED TIMESTAMP,
    CREATEDDATE TIMESTAMP,
    MODIFIEDDATE TIMESTAMP,
    APPROVALCOUNT INT
);
CREATE TABLE SIBS_SEQUENCES
(
    SEQUENCE BIGINT,
    DATE_INITIALIZED TIMESTAMP,
    SEQUENCE_TYPE VARCHAR(10)
);
CREATE TABLE SWIFTCHARGE
(
    ID VARCHAR(255) PRIMARY KEY NOT NULL,
    CODE VARCHAR(10),
    DESCRIPTION VARCHAR(255),
    CURRENCY VARCHAR(3),
    AMOUNT DECIMAL(19,2),
    TRADESERVICEID VARCHAR(36)
);
CREATE TABLE SWIFTMESSAGELOG
(
    ID BIGINT PRIMARY KEY NOT NULL,
    SWIFT_MESSAGE CLOB(10000),
    DATE_CREATED TIMESTAMP,
    FILENAME VARCHAR(30),
    SENT SMALLINT
);
CREATE TABLE TASK
(
    TASKREFERENCENUMBER VARCHAR(50) PRIMARY KEY NOT NULL,
    TASKREFERENCETYPE VARCHAR(10),
    TASKSTATUS VARCHAR(15),
    TASKOWNER VARCHAR(20),
    UNITCODE VARCHAR(3),
    CREATEDDATE TIMESTAMP,
    MODIFIEDDATE TIMESTAMP
);
CREATE TABLE TOKENS
(
    TOKEN BIGINT,
    ID VARCHAR(255)
);
CREATE TABLE TRADEPRODUCT
(
    DOCUMENTNUMBER VARCHAR(21) PRIMARY KEY NOT NULL,
    PRODUCTTYPE VARCHAR(20) NOT NULL,
    CIFNUMBER VARCHAR(10),
    CIFNAME VARCHAR(100),
    MAINCIFNUMBER VARCHAR(10),
    MAINCIFNAME VARCHAR(100),
    ACCOUNTOFFICER VARCHAR(100),
    CCBDBRANCHUNITCODE VARCHAR(10),
    FACILITYID VARCHAR(11),
    FACILITYTYPE VARCHAR(4),
    FACILITYREFERENCENUMBER VARCHAR(20),
    ALLOCATIONUNITCODE VARCHAR(3),
    STATUS VARCHAR(12),
    LONGNAME VARCHAR(150),
    ADDRESS1 VARCHAR(150),
    ADDRESS2 VARCHAR(150),
    PASSONRATETHIRDTOUSD DECIMAL(19,8),
    PASSONRATETHIRDTOPHP DECIMAL(19,8),
    PASSONRATEUSDTOPHP DECIMAL(19,8),
    SPECIALRATETHIRDTOUSD DECIMAL(19,8),
    SPECIALRATETHIRDTOPHP DECIMAL(19,8),
    SPECIALRATEUSDTOPHP DECIMAL(19,8),
    URR DECIMAL(19,8),
    AMOUNT DECIMAL(19,2),
    CURRENCY VARCHAR(3)
);
CREATE TABLE TRADEPRODUCT_AUDIT
(
    PRODUCTTYPE VARCHAR(20) NOT NULL,
    DOCUMENTNUMBER VARCHAR(21) NOT NULL,
    REV_ID INT NOT NULL,
    REV_TYPE SMALLINT,
    CIFNUMBER VARCHAR(10),
    CIFNAME VARCHAR(100),
    MAINCIFNUMBER VARCHAR(10),
    MAINCIFNAME VARCHAR(100),
    ACCOUNTOFFICER VARCHAR(100),
    CCBDBRANCHUNITCODE VARCHAR(10),
    FACILITYID VARCHAR(11),
    FACILITYTYPE VARCHAR(4),
    FACILITYREFERENCENUMBER VARCHAR(20),
    ALLOCATIONUNITCODE VARCHAR(3),
    STATUS VARCHAR(12),
    LONGNAME VARCHAR(150),
    ADDRESS1 VARCHAR(150),
    ADDRESS2 VARCHAR(150),
    PASSONRATETHIRDTOUSD DECIMAL(19,8),
    PASSONRATETHIRDTOPHP DECIMAL(19,8),
    PASSONRATEUSDTOPHP DECIMAL(19,8),
    SPECIALRATETHIRDTOUSD DECIMAL(19,8),
    SPECIALRATETHIRDTOPHP DECIMAL(19,8),
    SPECIALRATEUSDTOPHP DECIMAL(19,8),
    URR DECIMAL(19,8),
    AMOUNT DECIMAL(19,2),
    CURRENCY VARCHAR(3),
    PRIMARY KEY ( DOCUMENTNUMBER, REV_ID )
);
CREATE TABLE TRADESERVICE
(
    TRADESERVICEID VARCHAR(36) PRIMARY KEY NOT NULL,
    SERVICEINSTRUCTIONID VARCHAR(12),
    TRADESERVICEREFERENCENUMBER VARCHAR(20),
    DOCUMENTNUMBER VARCHAR(21),
    TRADEPRODUCTNUMBER VARCHAR(21),
    STATUS VARCHAR(15),
    PROCESSID BIGINT,
    DETAILS CLOB(400000),
    CHARGESCURRENCY VARCHAR(3),
    APPROVERS VARCHAR(50),
    AMOUNT DECIMAL(19,2),
    DEFAULTAMOUNT DECIMAL(19,2),
    CURRENCY VARCHAR(3),
    CIFNUMBER VARCHAR(10),
    CIFNAME VARCHAR(100),
    MAINCIFNUMBER VARCHAR(10),
    MAINCIFNAME VARCHAR(100),
    FACILITYID VARCHAR(11),
    FACILITYTYPE VARCHAR(4),
    ACCOUNTOFFICER VARCHAR(80),
    SERVICETYPE VARCHAR(30),
    DOCUMENTTYPE VARCHAR(20),
    DOCUMENTCLASS VARCHAR(20),
    DOCUMENTSUBTYPE1 VARCHAR(15),
    DOCUMENTSUBTYPE2 VARCHAR(10),
    USERACTIVEDIRECTORYID VARCHAR(20),
    LASTUSER VARCHAR(20),
    PREPAREDBY VARCHAR(20),
    CREATEDDATE TIMESTAMP,
    MODIFIEDDATE TIMESTAMP,
    NARRATIVE CLOB(500),
    REASONFORCANCELLATION CLOB(500),
    PROCESSINGUNITCODE VARCHAR(10),
    CCBDBRANCHUNITCODE VARCHAR(10),
    ALLOCATIONUNITCODE VARCHAR(10),
    PASSONRATETHIRDTOUSDSERVICECHARGE DECIMAL(19,2),
    PASSONRATEUSDTOPHPSERVICECHARGE DECIMAL(19,2),
    PASSONRATETHIRDTOPHPSERVICECHARGE DECIMAL(19,2),
    PASSONURRSERVICECHARGE DECIMAL(19,2),
    SPECIALRATETHIRDTOUSDSERVICECHARGE DECIMAL(19,2),
    SPECIALRATEUSDTOPHPSERVICECHARGE DECIMAL(19,2),
    SPECIALRATETHIRDTOPHPSERVICECHARGE DECIMAL(19,2),
    SPECIALRATEURRSERVICECHARGE DECIMAL(19,2),
    PAYMENTSTATUS VARCHAR(20),
    REINSTATEFLAG SMALLINT,
    CREATEDBY VARCHAR(20)
);
CREATE TABLE TRANSACTIONLOG
(
    TXNREFERENCENUMBER VARCHAR(20) PRIMARY KEY NOT NULL,
    TXNDATE TIMESTAMP,
    DEALNUMBER VARCHAR(50),
    TRANSACTIONTYPECODE VARCHAR(5),
    TRANSACTIONSUBTYPE VARCHAR(15),
    TRANSACTIONMODE VARCHAR(15),
    TRANSACTIONAMOUNT DECIMAL(21,2),
    DEBIT_CREDIT_FLAG VARCHAR(1),
    DIRECTION VARCHAR(1),
    BRANCHCODE VARCHAR(15),
    ACCOUNTNUMBER VARCHAR(50),
    SETTLEMENTCURRENCY VARCHAR(5),
    EXCHANGERATE DECIMAL(24,8),
    SETTLEMENTAMOUNT DECIMAL(18,2),
    PURPOSE VARCHAR(255),
    CPACCOUNTNO VARCHAR(50),
    CPNAME1 VARCHAR(100),
    CPNAME2 VARCHAR(100),
    CPNAME3 VARCHAR(100),
    CP_ADDRESS1 VARCHAR(100),
    CP_ADDRESS2 VARCHAR(100),
    CP_ADDRESS3 VARCHAR(100),
    CPINSTITUTION VARCHAR(100),
    CPINSTITUTIONCOUNTRY VARCHAR(50),
    CORRESPONDENTBANKNAME VARCHAR(100),
    CORRESPONDENTCOUNTRYCODE VARCHAR(50),
    CORRESPONDENTADDRESS1 VARCHAR(100),
    CORRESPONDENTADDRESS2 VARCHAR(100),
    CORRESPONDENTADDRESS3 VARCHAR(100),
    INTRINSTITUTIONNAME VARCHAR(100),
    INTRINSTITUTIONCOUNTRY VARCHAR(50),
    INTRINSTITUTIONADDR1 VARCHAR(100),
    INTRINSTITUTIONADDR2 VARCHAR(100),
    INTRINSTITUTIONADDR3 VARCHAR(100),
    BENEFICIARYNAME1 VARCHAR(100),
    BENEFICIARYNAME2 VARCHAR(100),
    BENEFICIARYNAME3 VARCHAR(100),
    BENEFICIARYCOUNTRY VARCHAR(50),
    BENEFICIARYADDR1 VARCHAR(100),
    BENEFICIARYADDR2 VARCHAR(100),
    BENEFICIARYADDR3 VARCHAR(100),
    PRODUCTTYPE VARCHAR(100),
    PRODUCTOWNERNAME1 VARCHAR(100),
    PRODUCTOWNERNAME2 VARCHAR(100),
    PRODUCTOWNERNAME3 VARCHAR(100),
    PRODUCTOWNERADDR1 VARCHAR(100),
    PRODUCTOWNERADDR2 VARCHAR(100),
    PRODUCTOWNERADDR3 VARCHAR(100),
    INCEPTIONDATE TIMESTAMP,
    MATURITYDATE TIMESTAMP,
    NARRATION VARCHAR(255),
    REMARKS VARCHAR(255),
    NATURE VARCHAR(50),
    FUNDSSOURCE VARCHAR(20),
    CERTIFIEDDOCUMENTS VARCHAR(1),
    INPUTDATE TIMESTAMP,
    REGULARDOCUMENTS VARCHAR(1),
    TRANSACTIONCODE VARCHAR(5),
    PAYMENTMODE VARCHAR(50)
);
CREATE TABLE TRANSMITTALLETTER
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    TRANSMITTALLETTERCODE VARCHAR(10),
    LETTERDESCRIPTION CLOB(3000),
    LETTERTYPE VARCHAR(7),
    ORIGINALCOPY BIGINT,
    DUPLICATECOPY BIGINT,
    TRADESERVICEID VARCHAR(36)
);
CREATE TABLE VALUEHOLDER
(
    ID VARCHAR(36) PRIMARY KEY NOT NULL,
    TOKEN VARCHAR(50),
    VALUE VARCHAR(50)
);
ALTER TABLE ACCOUNTSPAYABLEACTIVITY ADD FOREIGN KEY ( ACCOUNTSPAYABLEID ) REFERENCES ACCOUNTSPAYABLE ( ID );
ALTER TABLE ACCOUNTSRECEIVABLEACTIVITY ADD FOREIGN KEY ( ACCOUNTSRECEIVABLEID ) REFERENCES ACCOUNTSRECEIVABLE ( ID );
ALTER TABLE ADDITIONALCONDITION ADD FOREIGN KEY ( TRADESERVICEID ) REFERENCES TRADESERVICE ( TRADESERVICEID );
ALTER TABLE ADVANCEPAYMENT ADD FOREIGN KEY ( DOCUMENTNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE ATTACHMENT ADD FOREIGN KEY ( ATTACHMENTID ) REFERENCES TRADESERVICE ( TRADESERVICEID );
ALTER TABLE DIRECTREMITTANCE ADD FOREIGN KEY ( DOCUMENTNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE DOCUMENTAGAINSTACCEPTANCE ADD FOREIGN KEY ( DOCUMENTNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE DOCUMENTAGAINSTPAYMENT ADD FOREIGN KEY ( DOCUMENTNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE EXPORTADVISING ADD FOREIGN KEY ( DOCUMENTNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE INDEMNITY ADD FOREIGN KEY ( INDEMNITYNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE INSTRUCTIONTOBANK ADD FOREIGN KEY ( TRADESERVICEID ) REFERENCES TRADESERVICE ( TRADESERVICEID );
ALTER TABLE LCADDITIONALCONDITION ADD FOREIGN KEY ( DOCUMENTNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE LCADDITIONALCONDITION_AUDIT ADD FOREIGN KEY ( REV_ID ) REFERENCES REVINFO ( REV );
ALTER TABLE LCINSTRUCTIONTOBANK ADD FOREIGN KEY ( DOCUMENTNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE LCINSTRUCTIONTOBANK_AUDIT ADD FOREIGN KEY ( REV_ID ) REFERENCES REVINFO ( REV );
ALTER TABLE LCNEGOTIATION ADD FOREIGN KEY ( DOCUMENTNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE LCNEGOTIATIONDISCREPANCY ADD FOREIGN KEY ( DOCUMENTNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE LCNEGOTIATIONDISCREPANCY_AUDIT ADD FOREIGN KEY ( REV_ID ) REFERENCES REVINFO ( REV );
ALTER TABLE LCNEGOTIATION_AUDIT ADD FOREIGN KEY ( REV_ID ) REFERENCES REVINFO ( REV );
ALTER TABLE LCREQUIREDDOCUMENT ADD FOREIGN KEY ( DOCUMENTNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE LCREQUIREDDOCUMENT_AUDIT ADD FOREIGN KEY ( REV_ID ) REFERENCES REVINFO ( REV );
ALTER TABLE LETTEROFCREDIT ADD FOREIGN KEY ( DOCUMENTNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE LETTEROFCREDIT_AUDIT ADD FOREIGN KEY ( DOCUMENTNUMBER, REV_ID ) REFERENCES TRADEPRODUCT_AUDIT ( DOCUMENTNUMBER, REV_ID );
ALTER TABLE LETTEROFCREDIT_LCADDITIONALCONDITION_AUDIT ADD FOREIGN KEY ( REV_ID ) REFERENCES REVINFO ( REV );
ALTER TABLE LETTEROFCREDIT_LCINSTRUCTIONTOBANK_AUDIT ADD FOREIGN KEY ( REV_ID ) REFERENCES REVINFO ( REV );
ALTER TABLE LETTEROFCREDIT_LCNEGOTIATIONDISCREPANCY_AUDIT ADD FOREIGN KEY ( REV_ID ) REFERENCES REVINFO ( REV );
ALTER TABLE LETTEROFCREDIT_LCNEGOTIATION_AUDIT ADD FOREIGN KEY ( REV_ID ) REFERENCES REVINFO ( REV );
ALTER TABLE LETTEROFCREDIT_LCREQUIREDDOCUMENT_AUDIT ADD FOREIGN KEY ( REV_ID ) REFERENCES REVINFO ( REV );
ALTER TABLE MARGINALDEPOSITACTIVITY ADD FOREIGN KEY ( MARGINALDEPOSITID ) REFERENCES MARGINALDEPOSIT ( ID );
ALTER TABLE OPENACCOUNT ADD FOREIGN KEY ( DOCUMENTNUMBER ) REFERENCES TRADEPRODUCT ( DOCUMENTNUMBER );
ALTER TABLE PAYMENTDETAIL ADD FOREIGN KEY ( PAYMENTID ) REFERENCES PAYMENT ( ID );
ALTER TABLE QRTZ_BLOB_TRIGGERS ADD FOREIGN KEY ( TRIGGER_NAME, TRIGGER_GROUP ) REFERENCES QRTZ_TRIGGERS ( TRIGGER_NAME, TRIGGER_GROUP );
ALTER TABLE QRTZ_CRON_TRIGGERS ADD FOREIGN KEY ( TRIGGER_NAME, TRIGGER_GROUP ) REFERENCES QRTZ_TRIGGERS ( TRIGGER_NAME, TRIGGER_GROUP );
ALTER TABLE QRTZ_JOB_LISTENERS ADD FOREIGN KEY ( JOB_NAME, JOB_GROUP ) REFERENCES QRTZ_JOB_DETAILS ( JOB_NAME, JOB_GROUP );
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD FOREIGN KEY ( TRIGGER_NAME, TRIGGER_GROUP ) REFERENCES QRTZ_TRIGGERS ( TRIGGER_NAME, TRIGGER_GROUP );
ALTER TABLE QRTZ_TRIGGERS ADD FOREIGN KEY ( JOB_NAME, JOB_GROUP ) REFERENCES QRTZ_JOB_DETAILS ( JOB_NAME, JOB_GROUP );
ALTER TABLE QRTZ_TRIGGER_LISTENERS ADD FOREIGN KEY ( TRIGGER_NAME, TRIGGER_GROUP ) REFERENCES QRTZ_TRIGGERS ( TRIGGER_NAME, TRIGGER_GROUP );
ALTER TABLE RBAC_AUTHORITY ADD FOREIGN KEY ( AUTHORIZATIONID ) REFERENCES RBAC_AUTHORIZATION ( ID );
ALTER TABLE RBAC_AUTHORITYTYPE ADD FOREIGN KEY ( ROLEID ) REFERENCES RBAC_AUTHORITYTYPE ( ID );
ALTER TABLE RBAC_PERMISSION ADD FOREIGN KEY ( ID ) REFERENCES RBAC_AUTHORITYTYPE ( ID );
ALTER TABLE RBAC_ROLE ADD FOREIGN KEY ( ID ) REFERENCES RBAC_AUTHORITYTYPE ( ID );
ALTER TABLE REQUIREDDOCUMENT ADD FOREIGN KEY ( TRADESERVICEID ) REFERENCES TRADESERVICE ( TRADESERVICEID );
ALTER TABLE ROUTES ADD FOREIGN KEY ( ROUTINGINFORMATIONID ) REFERENCES ROUTINGINFORMATION ( ROUTINGINFORMATIONID );
ALTER TABLE SEC_PERMISSION ADD FOREIGN KEY ( OBJECT_CODE ) REFERENCES SEC_OBJECT ( CODE );
ALTER TABLE SEC_ROLE_PERMISSIONS ADD FOREIGN KEY ( PERMISSIONID ) REFERENCES SEC_PERMISSION ( PERMISSIONID );
ALTER TABLE SEC_ROLE_PERMISSIONS ADD FOREIGN KEY ( ROLEID ) REFERENCES SEC_ROLE ( ID );
ALTER TABLE SEC_USER_ROLES ADD FOREIGN KEY ( ROLEID ) REFERENCES SEC_ROLE ( ID );
ALTER TABLE SEC_USER_ROLES ADD FOREIGN KEY ( USERID ) REFERENCES SEC_USER ( ID );
ALTER TABLE SERVICECHARGE ADD FOREIGN KEY ( TRADESERVICEID ) REFERENCES TRADESERVICE ( TRADESERVICEID );
ALTER TABLE SWIFTCHARGE ADD FOREIGN KEY ( TRADESERVICEID ) REFERENCES TRADESERVICE ( TRADESERVICEID );
ALTER TABLE TRADEPRODUCT_AUDIT ADD FOREIGN KEY ( REV_ID ) REFERENCES REVINFO ( REV );
ALTER TABLE TRANSMITTALLETTER ADD FOREIGN KEY ( TRADESERVICEID ) REFERENCES TRADESERVICE ( TRADESERVICEID );
