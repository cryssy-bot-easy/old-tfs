<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:file="http://www.springframework.org/schema/integration/file"
       xmlns:int="http://www.springframework.org/schema/integration"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/integration/file	http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.0.xsd">

    <jdbc:embedded-database id="testReportDatabase" type="DERBY">
        <!--<jdbc:script location="classpath*:create-accounting-entry-table.sql"/>-->
        <jdbc:script location="classpath*:create-job-history-tables.sql"/>
    </jdbc:embedded-database>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg name="dataSource" ref="testReportDatabase"/>
    </bean>

    <int:channel id="glOutputChannel"/>


    <file:outbound-channel-adapter id="glOutputDirectory"
                                   directory="tfs-batch/src/test/resources/outputReports"
                                   channel="glOutputChannel"
                                   filename-generator-expression="'TFGLMVMT.txt'"
                                   delete-source-files="true"/>

    <!-- SQL will always cause an error. Table does not exist (Intentional) -->
    <bean id="exceptionThrowingJob" class="com.ucpb.tfs.batch.job.ExceptionThrowingJob">
    </bean>

    <bean id="dailyReportJob" class="org.springframework.scheduling.quartz.JobDetailBean" abstract="true">
        <property name="jobClass" value="com.ucpb.tfs.batch.job.ApplicationContextAwareQuartzJob"/>
        <property name="group" value="dailyReports"/>
    </bean>

    <bean id="glReportJobDetail" parent="dailyReportJob">
        <property name="jobDataAsMap">
            <map merge="true">
                <entry key="jobBeanName" value="exceptionThrowingJob"/>
            </map>
        </property>
    </bean>

    <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <!-- see the example of method invoking job above -->
        <property name="jobDetail" ref="glReportJobDetail" />
        <!-- 10 seconds -->
        <property name="startDelay" value="1000" />
        <!-- repeat every 50 seconds -->
        <property name="repeatInterval" value="12000000" />
    </bean>

    <bean id="dblogger" class="com.ucpb.tfs.batch.listener.DbLoggingJobListener">
        <constructor-arg name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" id="scheduler">
        <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
        <property name="triggers">
            <list>
                <ref bean="simpleTrigger"/>
            </list>
        </property>
        <property name="globalJobListeners">
            <list>
                <ref bean="dblogger"/>
            </list>
        </property>
        <!--<property name="dataSource" ref="testReportDatabase"/>-->
        <!--<property name="quartzProperties">-->
            <!--<props>-->
                <!--<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>-->
                <!--<prop key="org.quartz.jobStore.isClustered">true</prop>-->
                <!--<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>-->
                <!--<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>-->
                <!--<prop key="org.quartz.dataSource.myDS.driver">org.apache.derby.jdbc.ClientDriver</prop>-->
                <!--<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.CloudscapeDelegate</prop>-->
                <!--&lt;!&ndash;<prop key="org.quartz.jobStore.dataSource"></prop>&ndash;&gt;-->
                <!--<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>-->
                <!--<prop key="org.quartz.dataSource.myDS.URL">jdbc:derby://localhost:1527/tfsdb</prop>-->
                <!--<prop key="org.quartz.dataSource.myDS.user">tfs</prop>-->
                <!--<prop key="org.quartz.dataSource.myDS.password">tfs</prop>-->
                <!--<prop key="org.quartz.dataSource.myDS.maxConnections">5</prop>-->
            <!--</props>-->
        <!--</property>-->
    </bean>


</beans>